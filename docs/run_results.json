{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.4", "generated_at": "2024-08-05T17:35:04.737700Z", "invocation_id": "f2301727-6ece-482d-b4a3-3af44f7de41a", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.848342Z", "completed_at": "2024-08-05T17:35:02.914501Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.915362Z", "completed_at": "2024-08-05T17:35:02.915381Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.10024499893188477, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__card_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"card_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__card_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.832876Z", "completed_at": "2024-08-05T17:35:02.914826Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.915890Z", "completed_at": "2024-08-05T17:35:02.915894Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.1034088134765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__balance_transaction_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"balance_transaction_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__balance_transaction_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.825867Z", "completed_at": "2024-08-05T17:35:02.915106Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.916459Z", "completed_at": "2024-08-05T17:35:02.916462Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.10501217842102051, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__account_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"account_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__account_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.911456Z", "completed_at": "2024-08-05T17:35:02.916240Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.917487Z", "completed_at": "2024-08-05T17:35:02.917492Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.10031914710998535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__charge_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"charge_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__charge_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.919938Z", "completed_at": "2024-08-05T17:35:02.931523Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.932069Z", "completed_at": "2024-08-05T17:35:02.932077Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014017820358276367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__customer_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"customer_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__customer_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.922536Z", "completed_at": "2024-08-05T17:35:02.931836Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.932748Z", "completed_at": "2024-08-05T17:35:02.932751Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.01437687873840332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__discount_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"discount_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__discount_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.925232Z", "completed_at": "2024-08-05T17:35:02.932562Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.933642Z", "completed_at": "2024-08-05T17:35:02.933646Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014787912368774414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__dispute_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"dispute_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__dispute_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.928882Z", "completed_at": "2024-08-05T17:35:02.933092Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.934246Z", "completed_at": "2024-08-05T17:35:02.934250Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.01477193832397461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__fee_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"fee_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__fee_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.936449Z", "completed_at": "2024-08-05T17:35:02.948368Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.948978Z", "completed_at": "2024-08-05T17:35:02.948986Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014430046081542969, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__invoice_line_item_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"invoice_line_item_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice_line_item_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.939393Z", "completed_at": "2024-08-05T17:35:02.948710Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.949472Z", "completed_at": "2024-08-05T17:35:02.949477Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014373064041137695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__invoice_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"invoice_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.942268Z", "completed_at": "2024-08-05T17:35:02.950076Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.951077Z", "completed_at": "2024-08-05T17:35:02.951081Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.015295982360839844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_intent_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"payment_intent_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_intent_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.944695Z", "completed_at": "2024-08-05T17:35:02.950310Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.951435Z", "completed_at": "2024-08-05T17:35:02.951438Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.015253067016601562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_method_card_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"payment_method_card_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method_card_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.953037Z", "completed_at": "2024-08-05T17:35:02.959386Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.971821Z", "completed_at": "2024-08-05T17:35:02.971828Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.021085262298583984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_method_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"payment_method_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.956503Z", "completed_at": "2024-08-05T17:35:02.971498Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.972380Z", "completed_at": "2024-08-05T17:35:02.972385Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.020673036575317383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payout_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"payout_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payout_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.959567Z", "completed_at": "2024-08-05T17:35:02.973057Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.974097Z", "completed_at": "2024-08-05T17:35:02.974101Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018141984939575195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__price_plan_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"price_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__price_plan_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.968956Z", "completed_at": "2024-08-05T17:35:02.973233Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.974437Z", "completed_at": "2024-08-05T17:35:02.974440Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.018300771713256836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__product_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"product_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__product_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.976118Z", "completed_at": "2024-08-05T17:35:02.989304Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.991150Z", "completed_at": "2024-08-05T17:35:02.991156Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01738595962524414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__refund_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"refund_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__refund_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.989554Z", "completed_at": "2024-08-05T17:35:02.990684Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.991532Z", "completed_at": "2024-08-05T17:35:02.991535Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011755943298339844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.account_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.980058Z", "completed_at": "2024-08-05T17:35:02.990902Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.991879Z", "completed_at": "2024-08-05T17:35:02.991882Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.017060041427612305, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__subscription_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"subscription_history_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__subscription_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.986867Z", "completed_at": "2024-08-05T17:35:02.992449Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:02.993492Z", "completed_at": "2024-08-05T17:35:02.993496Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.014046192169189453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__transfer_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"transfer_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__transfer_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.995243Z", "completed_at": "2024-08-05T17:35:02.996327Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.000099Z", "completed_at": "2024-08-05T17:35:03.000103Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0069200992584228516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.balance_transaction_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.996789Z", "completed_at": "2024-08-05T17:35:02.997845Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.000636Z", "completed_at": "2024-08-05T17:35:03.000639Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006757020950317383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.card_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:02.998069Z", "completed_at": "2024-08-05T17:35:02.999866Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.000955Z", "completed_at": "2024-08-05T17:35:03.000958Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.006837129592895508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.charge_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.001511Z", "completed_at": "2024-08-05T17:35:03.002570Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.003516Z", "completed_at": "2024-08-05T17:35:03.003519Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0070111751556396484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.credit_note_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.005329Z", "completed_at": "2024-08-05T17:35:03.006557Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.009615Z", "completed_at": "2024-08-05T17:35:03.009620Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006398200988769531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.credit_note_line_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.007142Z", "completed_at": "2024-08-05T17:35:03.008219Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.010185Z", "completed_at": "2024-08-05T17:35:03.010188Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006239891052246094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.customer_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.008444Z", "completed_at": "2024-08-05T17:35:03.009409Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.010496Z", "completed_at": "2024-08-05T17:35:03.010498Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.006263017654418945, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.discount_data_postgres", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.011018Z", "completed_at": "2024-08-05T17:35:03.012719Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.013770Z", "completed_at": "2024-08-05T17:35:03.013776Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006967782974243164, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.dispute_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.015583Z", "completed_at": "2024-08-05T17:35:03.016624Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.019437Z", "completed_at": "2024-08-05T17:35:03.019441Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006065845489501953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.fee_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.017105Z", "completed_at": "2024-08-05T17:35:03.018071Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.020106Z", "completed_at": "2024-08-05T17:35:03.020113Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006047964096069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.invoice_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.018277Z", "completed_at": "2024-08-05T17:35:03.019224Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.020562Z", "completed_at": "2024-08-05T17:35:03.020566Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.006232023239135742, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.invoice_line_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.021227Z", "completed_at": "2024-08-05T17:35:03.022248Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.023372Z", "completed_at": "2024-08-05T17:35:03.023376Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006566047668457031, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.payment_intent_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.025311Z", "completed_at": "2024-08-05T17:35:03.026424Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.031590Z", "completed_at": "2024-08-05T17:35:03.031597Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008616924285888672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.payment_method_card_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.027143Z", "completed_at": "2024-08-05T17:35:03.029601Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.032327Z", "completed_at": "2024-08-05T17:35:03.032332Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.008587121963500977, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.payment_method_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.029951Z", "completed_at": "2024-08-05T17:35:03.031258Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.032699Z", "completed_at": "2024-08-05T17:35:03.032703Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.008695125579833984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.payout_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.033364Z", "completed_at": "2024-08-05T17:35:03.034397Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.035305Z", "completed_at": "2024-08-05T17:35:03.035308Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008607149124145508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.plan_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.036749Z", "completed_at": "2024-08-05T17:35:03.037793Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.040575Z", "completed_at": "2024-08-05T17:35:03.040579Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0055539608001708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.price_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.038195Z", "completed_at": "2024-08-05T17:35:03.039205Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.041070Z", "completed_at": "2024-08-05T17:35:03.041073Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0054988861083984375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.product_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.039419Z", "completed_at": "2024-08-05T17:35:03.040383Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.041361Z", "completed_at": "2024-08-05T17:35:03.041364Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0055959224700927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.refund_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.041854Z", "completed_at": "2024-08-05T17:35:03.043703Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.044750Z", "completed_at": "2024-08-05T17:35:03.044754Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006805896759033203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.subscription_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.046331Z", "completed_at": "2024-08-05T17:35:03.047364Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.058693Z", "completed_at": "2024-08-05T17:35:03.058699Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.014288187026977539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.subscription_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.047792Z", "completed_at": "2024-08-05T17:35:03.048751Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.059298Z", "completed_at": "2024-08-05T17:35:03.059302Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014271974563598633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.transfer_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.060025Z", "completed_at": "2024-08-05T17:35:03.436199Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.445790Z", "completed_at": "2024-08-05T17:35:03.445799Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.42432403564453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__balance_transaction", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__balance_transaction_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    available_on\n    \n as \n    \n    available_on\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    exchange_rate\n    \n as \n    \n    exchange_rate\n    \n, \n    \n    \n    fee\n    \n as \n    \n    fee\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    net\n    \n as \n    \n    net\n    \n, \n    \n    \n    payout_id\n    \n as \n    \n    payout_id\n    \n, \n    \n    \n    reporting_category\n    \n as \n    \n    reporting_category\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as balance_transaction_id,\n        amount,\n        cast(available_on as timestamp) as available_on,\n        cast(created as timestamp) as created_at,\n        connected_account_id,\n        currency,\n        description,\n        exchange_rate,\n        fee,\n        net,\n        reporting_category,\n        source,\n        status,\n        type,\n        source_relation\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__balance_transaction\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.048943Z", "completed_at": "2024-08-05T17:35:03.446033Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.446390Z", "completed_at": "2024-08-05T17:35:03.446393Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.42850184440612793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__card", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__card_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    address_city\n    \n as \n    \n    address_city\n    \n, \n    \n    \n    address_country\n    \n as \n    \n    address_country\n    \n, \n    \n    \n    address_line_1\n    \n as \n    \n    address_line_1\n    \n, \n    \n    \n    address_line_1_check\n    \n as \n    \n    address_line_1_check\n    \n, \n    \n    \n    address_line_2\n    \n as \n    \n    address_line_2\n    \n, \n    \n    \n    address_state\n    \n as \n    \n    address_state\n    \n, \n    \n    \n    address_zip\n    \n as \n    \n    address_zip\n    \n, \n    \n    \n    address_zip_check\n    \n as \n    \n    address_zip_check\n    \n, \n    \n    \n    brand\n    \n as \n    \n    brand\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    cvc_check\n    \n as \n    \n    cvc_check\n    \n, \n    \n    \n    dynamic_last_4\n    \n as \n    \n    dynamic_last_4\n    \n, \n    \n    \n    exp_month\n    \n as \n    \n    exp_month\n    \n, \n    \n    \n    exp_year\n    \n as \n    \n    exp_year\n    \n, \n    \n    \n    fingerprint\n    \n as \n    \n    fingerprint\n    \n, \n    \n    \n    funding\n    \n as \n    \n    funding\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    last_4\n    \n as \n    \n    last_4\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    network\n    \n as \n    \n    network\n    \n, \n    \n    \n    recipient\n    \n as \n    \n    recipient\n    \n, \n    \n    \n    tokenization_method\n    \n as \n    \n    tokenization_method\n    \n, \n    cast(null as TEXT) as \n    \n    wallet_type\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as card_id,\n        account_id,\n        address_city as card_address_city,\n        address_country as card_address_country,\n        address_line_1 as card_address_line_1,\n        address_line_2 as card_address_line_2,\n        address_state as card_address_state,\n        address_zip as card_address_postal_code,\n        wallet_type,\n        brand,\n        country,\n        cast(created as timestamp) as created_at,\n        customer_id,\n        name as card_name,\n        recipient,\n        funding,\n        source_relation\n        \n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__card\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.101534Z", "completed_at": "2024-08-05T17:35:03.446589Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.447009Z", "completed_at": "2024-08-05T17:35:03.447012Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3777279853820801, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__charge", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__charge_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amount_refunded\n    \n as \n    \n    amount_refunded\n    \n, \n    \n    \n    application\n    \n as \n    \n    application\n    \n, \n    \n    \n    application_fee_amount\n    \n as \n    \n    application_fee_amount\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    bank_account_id\n    \n as \n    \n    bank_account_id\n    \n, \n    \n    \n    calculated_statement_descriptor\n    \n as \n    \n    calculated_statement_descriptor\n    \n, \n    \n    \n    captured\n    \n as \n    \n    captured\n    \n, \n    \n    \n    card_id\n    \n as \n    \n    card_id\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    destination\n    \n as \n    \n    destination\n    \n, \n    \n    \n    failure_code\n    \n as \n    \n    failure_code\n    \n, \n    \n    \n    failure_message\n    \n as \n    \n    failure_message\n    \n, \n    \n    \n    fraud_details_stripe_report\n    \n as \n    \n    fraud_details_stripe_report\n    \n, \n    \n    \n    fraud_details_user_report\n    \n as \n    \n    fraud_details_user_report\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    invoice_id\n    \n as \n    \n    invoice_id\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    on_behalf_of\n    \n as \n    \n    on_behalf_of\n    \n, \n    \n    \n    outcome_network_status\n    \n as \n    \n    outcome_network_status\n    \n, \n    \n    \n    outcome_reason\n    \n as \n    \n    outcome_reason\n    \n, \n    \n    \n    outcome_risk_level\n    \n as \n    \n    outcome_risk_level\n    \n, \n    \n    \n    outcome_risk_score\n    \n as \n    \n    outcome_risk_score\n    \n, \n    \n    \n    outcome_seller_message\n    \n as \n    \n    outcome_seller_message\n    \n, \n    \n    \n    outcome_type\n    \n as \n    \n    outcome_type\n    \n, \n    \n    \n    paid\n    \n as \n    \n    paid\n    \n, \n    \n    \n    payment_intent_id\n    \n as \n    \n    payment_intent_id\n    \n, \n    cast(null as TEXT) as \n    \n    payment_method_id\n    \n , \n    \n    \n    receipt_email\n    \n as \n    \n    receipt_email\n    \n, \n    \n    \n    receipt_number\n    \n as \n    \n    receipt_number\n    \n, \n    \n    \n    receipt_url\n    \n as \n    \n    receipt_url\n    \n, \n    \n    \n    refunded\n    \n as \n    \n    refunded\n    \n, \n    \n    \n    shipping_address_city\n    \n as \n    \n    shipping_address_city\n    \n, \n    \n    \n    shipping_address_country\n    \n as \n    \n    shipping_address_country\n    \n, \n    \n    \n    shipping_address_line_1\n    \n as \n    \n    shipping_address_line_1\n    \n, \n    \n    \n    shipping_address_line_2\n    \n as \n    \n    shipping_address_line_2\n    \n, \n    \n    \n    shipping_address_postal_code\n    \n as \n    \n    shipping_address_postal_code\n    \n, \n    \n    \n    shipping_address_state\n    \n as \n    \n    shipping_address_state\n    \n, \n    \n    \n    shipping_carrier\n    \n as \n    \n    shipping_carrier\n    \n, \n    \n    \n    shipping_name\n    \n as \n    \n    shipping_name\n    \n, \n    \n    \n    shipping_phone\n    \n as \n    \n    shipping_phone\n    \n, \n    \n    \n    shipping_tracking_number\n    \n as \n    \n    shipping_tracking_number\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    source_transfer\n    \n as \n    \n    source_transfer\n    \n, \n    \n    \n    statement_descriptor\n    \n as \n    \n    statement_descriptor\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    transfer_data_destination\n    \n as \n    \n    transfer_data_destination\n    \n, \n    \n    \n    transfer_group\n    \n as \n    \n    transfer_group\n    \n, \n    \n    \n    transfer_id\n    \n as \n    \n    transfer_id\n    \n, \n    cast(null as TEXT) as \n    \n    billing_detail_address_city\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_address_country\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_address_line1\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_address_line2\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_address_postal_code\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_address_state\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_email\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_name\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_phone\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select \n        id as charge_id, \n        amount,\n        amount_refunded,\n        application_fee_amount,\n        balance_transaction_id,\n        captured as is_captured,\n        card_id,\n        cast(created as timestamp) as created_at,\n        connected_account_id,\n        customer_id,\n        currency,\n        description,\n        failure_code,\n        failure_message,\n        metadata,\n        paid as is_paid,\n        payment_intent_id,\n        payment_method_id,\n        receipt_email,\n        receipt_number,\n        refunded as is_refunded,\n        status,\n        shipping_address_city,\n        shipping_address_country,\n        shipping_address_line_1,\n        shipping_address_line_2,\n        shipping_address_postal_code,\n        shipping_address_state,\n        shipping_carrier,\n        shipping_name,\n        shipping_phone,\n        shipping_tracking_number,\n        source_id,\n        source_transfer,\n        statement_descriptor,\n        invoice_id,\n        calculated_statement_descriptor,\n        billing_detail_address_city,\n        billing_detail_address_country,\n        billing_detail_address_line1,\n        billing_detail_address_line2,\n        billing_detail_address_postal_code,\n        billing_detail_address_state,\n        billing_detail_email,\n        billing_detail_name,\n        billing_detail_phone,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__charge\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.097343Z", "completed_at": "2024-08-05T17:35:03.446793Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.447204Z", "completed_at": "2024-08-05T17:35:03.447209Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.38304686546325684, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__account", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__account_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    business_profile_name\n    \n as \n    \n    business_profile_name\n    \n, \n    \n    \n    business_profile_mcc\n    \n as \n    \n    business_profile_mcc\n    \n, \n    \n    \n    business_type\n    \n as \n    \n    business_type\n    \n, \n    \n    \n    charges_enabled\n    \n as \n    \n    charges_enabled\n    \n, \n    \n    \n    company_address_city\n    \n as \n    \n    company_address_city\n    \n, \n    \n    \n    company_address_country\n    \n as \n    \n    company_address_country\n    \n, \n    \n    \n    company_address_line_1\n    \n as \n    \n    company_address_line_1\n    \n, \n    \n    \n    company_address_line_2\n    \n as \n    \n    company_address_line_2\n    \n, \n    \n    \n    company_address_postal_code\n    \n as \n    \n    company_address_postal_code\n    \n, \n    \n    \n    company_address_state\n    \n as \n    \n    company_address_state\n    \n, \n    \n    \n    company_name\n    \n as \n    \n    company_name\n    \n, \n    \n    \n    company_phone\n    \n as \n    \n    company_phone\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    default_currency\n    \n as \n    \n    default_currency\n    \n, \n    \n    \n    details_submitted\n    \n as \n    \n    details_submitted\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    payouts_enabled\n    \n as \n    \n    payouts_enabled\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as account_id,\n        business_profile_mcc,\n        business_profile_name,\n        business_type,\n        charges_enabled,\n        company_address_city,\n        company_address_country,\n        company_address_line_1,\n        company_address_line_2,\n        company_address_postal_code,\n        company_address_state,\n        company_name,\n        company_phone,\n        country,\n        cast(created as timestamp) as created_at,\n        default_currency,\n        email,\n        is_deleted,\n        metadata,\n        payouts_enabled as is_payouts_enabled,\n        type as account_type,\n        source_relation\n\n        \n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__account\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.474382Z", "completed_at": "2024-08-05T17:35:03.705098Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.705324Z", "completed_at": "2024-08-05T17:35:03.705330Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2554280757904053, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__customer", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__customer_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account_balance\n    \n as \n    \n    account_balance\n    \n, \n    \n    \n    address_city\n    \n as \n    \n    address_city\n    \n, \n    \n    \n    address_country\n    \n as \n    \n    address_country\n    \n, \n    \n    \n    address_line_1\n    \n as \n    \n    address_line_1\n    \n, \n    \n    \n    address_line_2\n    \n as \n    \n    address_line_2\n    \n, \n    \n    \n    address_postal_code\n    \n as \n    \n    address_postal_code\n    \n, \n    \n    \n    address_state\n    \n as \n    \n    address_state\n    \n, \n    \n    \n    balance\n    \n as \n    \n    balance\n    \n, \n    \n    \n    bank_account_id\n    \n as \n    \n    bank_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    default_card_id\n    \n as \n    \n    default_card_id\n    \n, \n    \n    \n    delinquent\n    \n as \n    \n    delinquent\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    invoice_prefix\n    \n as \n    \n    invoice_prefix\n    \n, \n    \n    \n    invoice_settings_default_payment_method\n    \n as \n    \n    invoice_settings_default_payment_method\n    \n, \n    \n    \n    invoice_settings_footer\n    \n as \n    \n    invoice_settings_footer\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    cast(null as TEXT) as \n    \n    metadata\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    shipping_address_city\n    \n as \n    \n    shipping_address_city\n    \n, \n    \n    \n    shipping_address_country\n    \n as \n    \n    shipping_address_country\n    \n, \n    \n    \n    shipping_address_line_1\n    \n as \n    \n    shipping_address_line_1\n    \n, \n    \n    \n    shipping_address_line_2\n    \n as \n    \n    shipping_address_line_2\n    \n, \n    \n    \n    shipping_address_postal_code\n    \n as \n    \n    shipping_address_postal_code\n    \n, \n    \n    \n    shipping_address_state\n    \n as \n    \n    shipping_address_state\n    \n, \n    \n    \n    shipping_carrier\n    \n as \n    \n    shipping_carrier\n    \n, \n    \n    \n    shipping_name\n    \n as \n    \n    shipping_name\n    \n, \n    \n    \n    shipping_phone\n    \n as \n    \n    shipping_phone\n    \n, \n    \n    \n    shipping_tracking_number\n    \n as \n    \n    shipping_tracking_number\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    tax_exempt\n    \n as \n    \n    tax_exempt\n    \n, \n    \n    \n    tax_info_tax_id\n    \n as \n    \n    tax_info_tax_id\n    \n, \n    \n    \n    tax_info_type\n    \n as \n    \n    tax_info_type\n    \n, \n    \n    \n    tax_info_verification_status\n    \n as \n    \n    tax_info_verification_status\n    \n, \n    \n    \n    tax_info_verification_verified_name\n    \n as \n    \n    tax_info_verification_verified_name\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as customer_id,\n        account_balance,\n        address_city as customer_address_city,\n        address_country as customer_address_country,\n        address_line_1 as customer_address_line_1,\n        address_line_2 as customer_address_line_2,\n        address_postal_code as customer_address_postal_code,\n        address_state as customer_address_state,\n        balance as customer_balance,\n        bank_account_id,\n        cast(created as timestamp) as created_at,\n        currency,\n        default_card_id,\n        delinquent as is_delinquent,\n        description,\n        email,\n        metadata,\n        name as customer_name,\n        phone,\n        shipping_address_city,\n        shipping_address_country,\n        shipping_address_line_1,\n        shipping_address_line_2,\n        shipping_address_postal_code,\n        shipping_address_state,\n        shipping_name,\n        shipping_phone,\n        source_relation,\n        coalesce(is_deleted, false) as is_deleted\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__customer\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.482035Z", "completed_at": "2024-08-05T17:35:03.754839Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.755058Z", "completed_at": "2024-08-05T17:35:03.755065Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.2991938591003418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__discount", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__discount_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    type_id\n    \n as \n    \n    type_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    checkout_session_id\n    \n as \n    \n    checkout_session_id\n    \n, \n    \n    \n    checkout_session_line_item_id\n    \n as \n    \n    checkout_session_line_item_id\n    \n, \n    \n    \n    coupon_id\n    \n as \n    \n    coupon_id\n    \n, \n    \n    \n    credit_note_line_item_id\n    \n as \n    \n    credit_note_line_item_id\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    invoice_id\n    \n as \n    \n    invoice_id\n    \n, \n    \n    \n    invoice_item_id\n    \n as \n    \n    invoice_item_id\n    \n, \n    \n    \n    promotion_code\n    \n as \n    \n    promotion_code\n    \n, \n    \n    \n    subscription_id\n    \n as \n    \n    subscription_id\n    \n, \n    \n    \n        \n            \n            \"end\"\n            \n        \n    \n as end_at , \n    \n    \n        \n            \n            \"start\"\n            \n        \n    \n as start_at \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as discount_id,\n        type,\n        type_id,\n        amount,\n        checkout_session_id,\n        checkout_session_line_item_id,\n        coupon_id,\n        credit_note_line_item_id,\n        customer_id,\n        cast(end_at as timestamp) as end_at, -- renamed in macro get_discount_columns, source column name: end\n        invoice_id,\n        invoice_item_id,\n        promotion_code,\n        cast(start_at as timestamp) as start_at, -- renamed in macro get_discount_columns, source column name: start\n        subscription_id,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__discount\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.485838Z", "completed_at": "2024-08-05T17:35:03.778205Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.778429Z", "completed_at": "2024-08-05T17:35:03.778435Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3219001293182373, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__dispute", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__dispute_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    balance_transaction\n    \n as \n    \n    balance_transaction\n    \n, \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    evidence_access_activity_log\n    \n as \n    \n    evidence_access_activity_log\n    \n, \n    \n    \n    evidence_billing_address\n    \n as \n    \n    evidence_billing_address\n    \n, \n    \n    \n    evidence_cancellation_policy\n    \n as \n    \n    evidence_cancellation_policy\n    \n, \n    \n    \n    evidence_cancellation_policy_disclosure\n    \n as \n    \n    evidence_cancellation_policy_disclosure\n    \n, \n    \n    \n    evidence_cancellation_rebuttal\n    \n as \n    \n    evidence_cancellation_rebuttal\n    \n, \n    \n    \n    evidence_customer_communication\n    \n as \n    \n    evidence_customer_communication\n    \n, \n    \n    \n    evidence_customer_email_address\n    \n as \n    \n    evidence_customer_email_address\n    \n, \n    \n    \n    evidence_customer_name\n    \n as \n    \n    evidence_customer_name\n    \n, \n    \n    \n    evidence_customer_purchase_ip\n    \n as \n    \n    evidence_customer_purchase_ip\n    \n, \n    \n    \n    evidence_customer_signature\n    \n as \n    \n    evidence_customer_signature\n    \n, \n    \n    \n    evidence_details_due_by\n    \n as \n    \n    evidence_details_due_by\n    \n, \n    \n    \n    evidence_details_has_evidence\n    \n as \n    \n    evidence_details_has_evidence\n    \n, \n    \n    \n    evidence_details_past_due\n    \n as \n    \n    evidence_details_past_due\n    \n, \n    \n    \n    evidence_details_submission_count\n    \n as \n    \n    evidence_details_submission_count\n    \n, \n    \n    \n    evidence_duplicate_charge_documentation\n    \n as \n    \n    evidence_duplicate_charge_documentation\n    \n, \n    \n    \n    evidence_duplicate_charge_explanation\n    \n as \n    \n    evidence_duplicate_charge_explanation\n    \n, \n    \n    \n    evidence_duplicate_charge_id\n    \n as \n    \n    evidence_duplicate_charge_id\n    \n, \n    \n    \n    evidence_product_description\n    \n as \n    \n    evidence_product_description\n    \n, \n    \n    \n    evidence_receipt\n    \n as \n    \n    evidence_receipt\n    \n, \n    \n    \n    evidence_refund_policy\n    \n as \n    \n    evidence_refund_policy\n    \n, \n    \n    \n    evidence_refund_policy_disclosure\n    \n as \n    \n    evidence_refund_policy_disclosure\n    \n, \n    \n    \n    evidence_refund_refusal_explanation\n    \n as \n    \n    evidence_refund_refusal_explanation\n    \n, \n    \n    \n    evidence_service_date\n    \n as \n    \n    evidence_service_date\n    \n, \n    \n    \n    evidence_service_documentation\n    \n as \n    \n    evidence_service_documentation\n    \n, \n    \n    \n    evidence_shipping_address\n    \n as \n    \n    evidence_shipping_address\n    \n, \n    \n    \n    evidence_shipping_carrier\n    \n as \n    \n    evidence_shipping_carrier\n    \n, \n    \n    \n    evidence_shipping_date\n    \n as \n    \n    evidence_shipping_date\n    \n, \n    \n    \n    evidence_shipping_documentation\n    \n as \n    \n    evidence_shipping_documentation\n    \n, \n    \n    \n    evidence_shipping_tracking_number\n    \n as \n    \n    evidence_shipping_tracking_number\n    \n, \n    \n    \n    evidence_uncategorized_file\n    \n as \n    \n    evidence_uncategorized_file\n    \n, \n    \n    \n    evidence_uncategorized_text\n    \n as \n    \n    evidence_uncategorized_text\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_charge_refundable\n    \n as \n    \n    is_charge_refundable\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    reason\n    \n as \n    \n    reason\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as dispute_id,\n        amount as dispute_amount,\n        balance_transaction,\n        charge_id,\n        connected_account_id,\n        cast(created as timestamp) as dispute_created_at,\n        currency as dispute_currency,\n        evidence_access_activity_log,\n        evidence_billing_address,\n        evidence_cancellation_policy,\n        evidence_cancellation_policy_disclosure,\n        evidence_cancellation_rebuttal,\n        evidence_customer_communication,\n        evidence_customer_email_address,\n        evidence_customer_name,\n        evidence_customer_purchase_ip,\n        evidence_customer_signature,\n        evidence_details_due_by,\n        evidence_details_has_evidence,\n        evidence_details_past_due,\n        evidence_details_submission_count,\n        evidence_duplicate_charge_documentation,\n        evidence_duplicate_charge_explanation,\n        evidence_duplicate_charge_id,\n        evidence_product_description,\n        evidence_receipt,\n        evidence_refund_policy,\n        evidence_refund_policy_disclosure,\n        evidence_refund_refusal_explanation,\n        evidence_service_date,\n        evidence_service_documentation,\n        evidence_shipping_address,\n        evidence_shipping_carrier,\n        evidence_shipping_date,\n        evidence_shipping_documentation,\n        evidence_shipping_tracking_number,\n        evidence_uncategorized_file,\n        evidence_uncategorized_text,\n        is_charge_refundable,\n        metadata as dispute_metadata,\n        reason as dispute_reason,\n        status as dispute_status,\n        source_relation\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__dispute\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.490450Z", "completed_at": "2024-08-05T17:35:03.778648Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.778874Z", "completed_at": "2024-08-05T17:35:03.778878Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.32736992835998535, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__fee", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__fee_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    application\n    \n as \n    \n    application\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        balance_transaction_id,\n        index,\n        amount,\n        application,\n        currency,\n        description,\n        type,\n        source_relation\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__fee\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.728875Z", "completed_at": "2024-08-05T17:35:03.965379Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:03.965606Z", "completed_at": "2024-08-05T17:35:03.965613Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2615828514099121, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__invoice_line_item", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice_line_item_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    discountable\n    \n as \n    \n    discountable\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    invoice_id\n    \n as \n    \n    invoice_id\n    \n, \n    cast(null as TEXT) as \n    \n    invoice_item_id\n    \n , \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    period_end\n    \n as \n    \n    period_end\n    \n, \n    \n    \n    period_start\n    \n as \n    \n    period_start\n    \n, \n    \n    \n    plan_id\n    \n as \n    \n    plan_id\n    \n, \n    cast(null as TEXT) as \n    \n    price_id\n    \n , \n    \n    \n    proration\n    \n as \n    \n    proration\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    subscription_id\n    \n as \n    \n    subscription_id\n    \n, \n    \n    \n    subscription_item_id\n    \n as \n    \n    subscription_item_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    unique_id\n    \n as \n    \n    unique_id\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as invoice_line_item_id,\n        invoice_id,\n        invoice_item_id,\n        amount,\n        currency,\n        description,\n        discountable as is_discountable,\n        plan_id,\n        price_id,\n        proration,\n        quantity,\n        subscription_id,\n        subscription_item_id,\n        type,\n        unique_id as unique_invoice_line_item_id,\n        period_start,\n        period_end,\n        source_relation\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n\n    \n    and id not like 'sub%' -- ids starting with 'sub' are temporary and are replaced by permanent ids starting with 'sli' \n    \n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice_line_item\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.804075Z", "completed_at": "2024-08-05T17:35:04.059945Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.060249Z", "completed_at": "2024-08-05T17:35:04.060256Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.28084707260131836, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_intent", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_intent_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amount_capturable\n    \n as \n    \n    amount_capturable\n    \n, \n    \n    \n    amount_received\n    \n as \n    \n    amount_received\n    \n, \n    \n    \n    application\n    \n as \n    \n    application\n    \n, \n    \n    \n    application_fee_amount\n    \n as \n    \n    application_fee_amount\n    \n, \n    \n    \n    canceled_at\n    \n as \n    \n    canceled_at\n    \n, \n    \n    \n    cancellation_reason\n    \n as \n    \n    cancellation_reason\n    \n, \n    \n    \n    capture_method\n    \n as \n    \n    capture_method\n    \n, \n    \n    \n    confirmation_method\n    \n as \n    \n    confirmation_method\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_payment_error_charge_id\n    \n as \n    \n    last_payment_error_charge_id\n    \n, \n    \n    \n    last_payment_error_code\n    \n as \n    \n    last_payment_error_code\n    \n, \n    \n    \n    last_payment_error_decline_code\n    \n as \n    \n    last_payment_error_decline_code\n    \n, \n    \n    \n    last_payment_error_doc_url\n    \n as \n    \n    last_payment_error_doc_url\n    \n, \n    \n    \n    last_payment_error_message\n    \n as \n    \n    last_payment_error_message\n    \n, \n    \n    \n    last_payment_error_param\n    \n as \n    \n    last_payment_error_param\n    \n, \n    \n    \n    last_payment_error_source_id\n    \n as \n    \n    last_payment_error_source_id\n    \n, \n    \n    \n    last_payment_error_type\n    \n as \n    \n    last_payment_error_type\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    cast(null as TEXT) as \n    \n    metadata\n    \n , \n    \n    \n    on_behalf_of\n    \n as \n    \n    on_behalf_of\n    \n, \n    \n    \n    payment_method_id\n    \n as \n    \n    payment_method_id\n    \n, \n    \n    \n    receipt_email\n    \n as \n    \n    receipt_email\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    statement_descriptor\n    \n as \n    \n    statement_descriptor\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    transfer_data_destination\n    \n as \n    \n    transfer_data_destination\n    \n, \n    \n    \n    transfer_group\n    \n as \n    \n    transfer_group\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as payment_intent_id,\n        amount,\n        amount_capturable,\n        amount_received,\n        application,\n        application_fee_amount,\n        cast(canceled_at as timestamp) as canceled_at,\n        cancellation_reason,\n        capture_method,\n        confirmation_method,\n        cast(created as timestamp) as created_at,\n        currency,\n        customer_id,\n        description,\n        metadata,\n        payment_method_id,\n        receipt_email,\n        statement_descriptor,\n        status,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_intent\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.810164Z", "completed_at": "2024-08-05T17:35:04.060486Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.060707Z", "completed_at": "2024-08-05T17:35:04.060711Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2751595973968506, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_method_card", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method_card_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    brand\n    \n as \n    \n    brand\n    \n, \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    \n    \n    funding\n    \n as \n    \n    funding\n    \n, \n    \n    \n    payment_method_id\n    \n as \n    \n    payment_method_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    wallet_type\n    \n as \n    \n    wallet_type\n    \n, \n    cast(null as TEXT) as \n    \n    three_d_secure_authentication_flow\n    \n , \n    cast(null as TEXT) as \n    \n    three_d_secure_result\n    \n , \n    cast(null as TEXT) as \n    \n    three_d_secure_result_reason\n    \n , \n    cast(null as TEXT) as \n    \n    three_d_secure_version\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        payment_method_id,\n        brand,\n        funding,\n        charge_id,\n        type,\n        wallet_type,\n        three_d_secure_authentication_flow,\n        three_d_secure_result,\n        three_d_secure_result_reason,\n        three_d_secure_version,\n        source_relation\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method_card\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.780584Z", "completed_at": "2024-08-05T17:35:04.060907Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.061168Z", "completed_at": "2024-08-05T17:35:04.061171Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3112068176269531, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__invoice", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as integer) as \n    \n    amount_due\n    \n , \n    cast(null as integer) as \n    \n    amount_paid\n    \n , \n    cast(null as integer) as \n    \n    amount_remaining\n    \n , \n    cast(null as integer) as \n    \n    application_fee_amount\n    \n , \n    cast(null as integer) as \n    \n    post_payment_credit_notes_amount\n    \n , \n    cast(null as integer) as \n    \n    pre_payment_credit_notes_amount\n    \n , \n    cast(null as integer) as \n    \n    attempt_count\n    \n , \n    cast(null as boolean) as \n    \n    attempted\n    \n , \n    cast(null as boolean) as \n    \n    auto_advance\n    \n , \n    cast(null as TEXT) as \n    \n    billing\n    \n , \n    cast(null as TEXT) as \n    \n    billing_reason\n    \n , \n    cast(null as TEXT) as \n    \n    charge_id\n    \n , \n    cast(null as timestamp) as \n    \n    created\n    \n , \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    cast(null as TEXT) as \n    \n    default_source_id\n    \n , \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    cast(null as timestamp) as \n    \n    due_date\n    \n , \n    cast(null as integer) as \n    \n    ending_balance\n    \n , \n    cast(null as timestamp) as \n    \n    finalized_at\n    \n , \n    cast(null as TEXT) as \n    \n    footer\n    \n , \n    cast(null as TEXT) as \n    \n    hosted_invoice_url\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as TEXT) as \n    \n    invoice_pdf\n    \n , \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    cast(null as timestamp) as \n    \n    next_payment_attempt\n    \n , \n    cast(null as TEXT) as \n    \n    number\n    \n , \n    cast(null as boolean) as \n    \n    paid\n    \n , \n    cast(null as TEXT) as \n    \n    default_payment_method_id\n    \n , \n    cast(null as TEXT) as \n    \n    payment_intent_id\n    \n , \n    \n    \n    subscription_id\n    \n as \n    \n    subscription_id\n    \n, \n    \n    \n    period_end\n    \n as \n    \n    period_end\n    \n, \n    \n    \n    period_start\n    \n as \n    \n    period_start\n    \n, \n    cast(null as TEXT) as \n    \n    receipt_number\n    \n , \n    cast(null as integer) as \n    \n    starting_balance\n    \n , \n    cast(null as TEXT) as \n    \n    statement_descriptor\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as timestamp) as \n    \n    status_transitions_finalized_at\n    \n , \n    cast(null as timestamp) as \n    \n    status_transitions_marked_uncollectible_at\n    \n , \n    cast(null as timestamp) as \n    \n    status_transitions_paid_at\n    \n , \n    cast(null as timestamp) as \n    \n    status_transitions_voided_at\n    \n , \n    cast(null as integer) as \n    \n    subscription_proration_date\n    \n , \n    cast(null as integer) as \n    \n    subtotal\n    \n , \n    cast(null as integer) as \n    \n    tax\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    tax_percent\n    \n , \n    cast(null as integer) as \n    \n    threshold_reason_amount_gte\n    \n , \n    cast(null as integer) as \n    \n    total\n    \n , \n    cast(null as timestamp) as \n    \n    webhooks_delivered_at\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as invoice_id,\n        default_payment_method_id,\n        payment_intent_id,\n        subscription_id,\n        amount_due,\n        amount_paid,\n        amount_remaining,\n        post_payment_credit_notes_amount,\n        pre_payment_credit_notes_amount,\n        attempt_count,\n        auto_advance,\n        billing_reason,\n        charge_id,\n        cast(created as timestamp) as created_at,\n        currency,\n        customer_id,\n        description,\n        due_date,\n        metadata,\n        number,\n        paid as is_paid,\n        receipt_number,\n        status,\n        subtotal,\n        tax,\n        tax_percent,\n        total,\n        period_start,\n        period_end,\n        cast(status_transitions_finalized_at as timestamp) as status_transitions_finalized_at,\n        cast(status_transitions_marked_uncollectible_at as timestamp) as status_transitions_marked_uncollectible_at,\n        cast(status_transitions_paid_at as timestamp) as status_transitions_paid_at,\n        cast(status_transitions_voided_at as timestamp) as status_transitions_voided_at,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n    and not coalesce(is_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:03.991079Z", "completed_at": "2024-08-05T17:35:04.251760Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.252139Z", "completed_at": "2024-08-05T17:35:04.252150Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.28653478622436523, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_method", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    billing_detail_address_city\n    \n as \n    \n    billing_detail_address_city\n    \n, \n    \n    \n    billing_detail_address_country\n    \n as \n    \n    billing_detail_address_country\n    \n, \n    \n    \n    billing_detail_address_line_1\n    \n as \n    \n    billing_detail_address_line_1\n    \n, \n    \n    \n    billing_detail_address_line_2\n    \n as \n    \n    billing_detail_address_line_2\n    \n, \n    \n    \n    billing_detail_address_postal_code\n    \n as \n    \n    billing_detail_address_postal_code\n    \n, \n    \n    \n    billing_detail_address_state\n    \n as \n    \n    billing_detail_address_state\n    \n, \n    \n    \n    billing_detail_email\n    \n as \n    \n    billing_detail_email\n    \n, \n    \n    \n    billing_detail_name\n    \n as \n    \n    billing_detail_name\n    \n, \n    \n    \n    billing_detail_phone\n    \n as \n    \n    billing_detail_phone\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    cast(null as TEXT) as \n    \n    metadata\n    \n , \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as payment_method_id,\n        cast(created as timestamp) as created_at,\n        customer_id,\n        metadata,\n        type,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.097983Z", "completed_at": "2024-08-05T17:35:04.334805Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.335048Z", "completed_at": "2024-08-05T17:35:04.335054Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.31529998779296875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__product", "compiled": true, "compiled_code": "\n\nwith product as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__product_tmp\"\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    fivetran_synced\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    active\n    \n as is_active , \n    cast(null as TEXT) as \n    \n    attributes\n    \n , \n    \n    \n    caption\n    \n as \n    \n    caption\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    cast(null as timestamp) as \n    \n    deactivate_on\n    \n , \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    cast(null as TEXT) as \n    \n    images\n    \n , \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    shippable\n    \n as \n    \n    shippable\n    \n, \n    \n    \n    statement_descriptor\n    \n as \n    \n    statement_descriptor\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    unit_label\n    \n as \n    \n    unit_label\n    \n, \n    \n    \n    updated\n    \n as \n    \n    updated\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from product\n),\n\nfinal as (\n\n    select \n        id as product_id,\n        is_active, -- renamed in macro get_product_columns, source column name: active\n        attributes,\n        caption,\n        cast(created as timestamp) as created_at,\n        cast(deactivate_on as timestamp) as deactivate_at,\n        description,\n        images,\n        is_deleted,\n        name,\n        shippable,\n        statement_descriptor,\n        type,\n        unit_label,\n        updated,\n        url,\n        source_relation\n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__product\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.091713Z", "completed_at": "2024-08-05T17:35:04.413357Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.419190Z", "completed_at": "2024-08-05T17:35:04.419196Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3590691089630127, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__price_plan", "compiled": true, "compiled_code": "\n\nwith price_plan as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__price_plan_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as is_active , \n    \n    \n    billing_scheme\n    \n as \n    \n    billing_scheme\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    nickname\n    \n as \n    \n    nickname\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n, \n    \n    \n    recurring_aggregate_usage\n    \n as \n    \n    recurring_aggregate_usage\n    \n, \n    \n    \n    recurring_interval\n    \n as \n    \n    recurring_interval\n    \n, \n    \n    \n    recurring_interval_count\n    \n as \n    \n    recurring_interval_count\n    \n, \n    \n    \n    recurring_usage_type\n    \n as \n    \n    recurring_usage_type\n    \n, \n    \n    \n    unit_amount\n    \n as \n    \n    unit_amount\n    \n, \n    \n    \n    unit_amount_decimal\n    \n as \n    \n    unit_amount_decimal\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from price_plan\n),\n\nfinal as (\n\n    select \n        id as price_plan_id,\n        is_active,\n        unit_amount,\n        currency,\n        recurring_interval,\n        recurring_interval_count,\n        recurring_usage_type,\n        recurring_aggregate_usage,\n        metadata,\n        nickname,\n        product_id,\n        billing_scheme,\n        cast(created as timestamp) as created_at,\n        is_deleted,\n        source_relation\n\n        \n        \n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__price_plan\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.086727Z", "completed_at": "2024-08-05T17:35:04.418943Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.419638Z", "completed_at": "2024-08-05T17:35:04.419642Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.35987091064453125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payout", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payout_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    arrival_date\n    \n as \n    \n    arrival_date\n    \n, \n    \n    \n    automatic\n    \n as \n    \n    automatic\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    destination_bank_account_id\n    \n as \n    \n    destination_bank_account_id\n    \n, \n    \n    \n    destination_card_id\n    \n as \n    \n    destination_card_id\n    \n, \n    \n    \n    failure_balance_transaction_id\n    \n as \n    \n    failure_balance_transaction_id\n    \n, \n    \n    \n    failure_code\n    \n as \n    \n    failure_code\n    \n, \n    \n    \n    failure_message\n    \n as \n    \n    failure_message\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    method\n    \n as \n    \n    method\n    \n, \n    \n    \n    source_type\n    \n as \n    \n    source_type\n    \n, \n    \n    \n    statement_descriptor\n    \n as \n    \n    statement_descriptor\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as payout_id,\n        amount,\n        cast(arrival_date as timestamp) as arrival_date_at,\n        automatic as is_automatic,\n        balance_transaction_id,\n        cast(created as timestamp) as created_at,\n        currency,\n        description,\n        destination_bank_account_id,\n        destination_card_id,\n        metadata,\n        method,\n        source_type,\n        status,\n        type,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payout\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.452018Z", "completed_at": "2024-08-05T17:35:04.460034Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.460270Z", "completed_at": "2024-08-05T17:35:04.460278Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013582944869995117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__balance_transaction_balance_transaction_id__source_relation.e83fa67eba", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        balance_transaction_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__balance_transaction\"\n    group by balance_transaction_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.461350Z", "completed_at": "2024-08-05T17:35:04.466283Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.466512Z", "completed_at": "2024-08-05T17:35:04.466516Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0056459903717041016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__balance_transaction_balance_transaction_id.0ac20e778f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect balance_transaction_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__balance_transaction\"\nwhere balance_transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.467531Z", "completed_at": "2024-08-05T17:35:04.470496Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.470706Z", "completed_at": "2024-08-05T17:35:04.470710Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0036468505859375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__card_card_id__source_relation.6e04594797", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        card_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__card\"\n    group by card_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.471755Z", "completed_at": "2024-08-05T17:35:04.475476Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.475694Z", "completed_at": "2024-08-05T17:35:04.475699Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004461050033569336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__charge_charge_id__source_relation.4616b292a1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        charge_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__charge\"\n    group by charge_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.476669Z", "completed_at": "2024-08-05T17:35:04.479277Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.479479Z", "completed_at": "2024-08-05T17:35:04.479483Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0032629966735839844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__card_card_id.edadd3106a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect card_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__card\"\nwhere card_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.480460Z", "completed_at": "2024-08-05T17:35:04.482942Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.483144Z", "completed_at": "2024-08-05T17:35:04.483148Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.003141164779663086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__charge_charge_id.8941bc704a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect charge_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__charge\"\nwhere charge_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.484117Z", "completed_at": "2024-08-05T17:35:04.487108Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.487327Z", "completed_at": "2024-08-05T17:35:04.487332Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0036628246307373047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__account_account_id__source_relation.822bb93896", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        account_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__account\"\n    group by account_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.488337Z", "completed_at": "2024-08-05T17:35:04.491588Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.491811Z", "completed_at": "2024-08-05T17:35:04.491816Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00396275520324707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__account_account_id.374858379a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__account\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.492825Z", "completed_at": "2024-08-05T17:35:04.496697Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.496932Z", "completed_at": "2024-08-05T17:35:04.496937Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004582881927490234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__customer_customer_id__source_relation.3fa0f43271", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        customer_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__customer\"\n    group by customer_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.497959Z", "completed_at": "2024-08-05T17:35:04.500617Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.500828Z", "completed_at": "2024-08-05T17:35:04.500833Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.003341197967529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__customer_customer_id.2e70421da0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__customer\"\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.501806Z", "completed_at": "2024-08-05T17:35:04.505227Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.505445Z", "completed_at": "2024-08-05T17:35:04.505449Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004094839096069336, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__discount_discount_id__type__type_id__source_relation.d9b54c55ae", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        discount_id, type, type_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__discount\"\n    group by discount_id, type, type_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.506436Z", "completed_at": "2024-08-05T17:35:04.509434Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.509654Z", "completed_at": "2024-08-05T17:35:04.509658Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.003679990768432617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__dispute_dispute_id__source_relation.3fe3205476", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        dispute_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__dispute\"\n    group by dispute_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.510646Z", "completed_at": "2024-08-05T17:35:04.513645Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.513875Z", "completed_at": "2024-08-05T17:35:04.513880Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0036890506744384766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__fee_balance_transaction_id__index__source_relation.d2b1cfff07", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        balance_transaction_id, index, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__fee\"\n    group by balance_transaction_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.514883Z", "completed_at": "2024-08-05T17:35:04.518253Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.518459Z", "completed_at": "2024-08-05T17:35:04.518464Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004045009613037109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__fee_balance_transaction_id.725d4ac005", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect balance_transaction_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__fee\"\nwhere balance_transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.519460Z", "completed_at": "2024-08-05T17:35:04.522652Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.522871Z", "completed_at": "2024-08-05T17:35:04.522875Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0038869380950927734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__invoice_line_item_invoice_line_item_id__invoice_id__source_relation.d2ff4b8aed", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        invoice_line_item_id, invoice_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice_line_item\"\n    group by invoice_line_item_id, invoice_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.523862Z", "completed_at": "2024-08-05T17:35:04.526385Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.526606Z", "completed_at": "2024-08-05T17:35:04.526611Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0032110214233398438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__invoice_line_item_invoice_line_item_id.5b9c83b5f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect invoice_line_item_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice_line_item\"\nwhere invoice_line_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.527583Z", "completed_at": "2024-08-05T17:35:04.530470Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.530675Z", "completed_at": "2024-08-05T17:35:04.530679Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.003543853759765625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__payment_intent_payment_intent_id__source_relation.046730da02", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        payment_intent_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_intent\"\n    group by payment_intent_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.531741Z", "completed_at": "2024-08-05T17:35:04.541850Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.542120Z", "completed_at": "2024-08-05T17:35:04.542128Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.010943174362182617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__payment_intent_payment_intent_id.cb5b4d09eb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payment_intent_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_intent\"\nwhere payment_intent_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.543696Z", "completed_at": "2024-08-05T17:35:04.546818Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.547045Z", "completed_at": "2024-08-05T17:35:04.547049Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004101991653442383, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__payment_method_card_payment_method_id__source_relation.fe1f48acd0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        payment_method_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method_card\"\n    group by payment_method_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.548034Z", "completed_at": "2024-08-05T17:35:04.550591Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.550794Z", "completed_at": "2024-08-05T17:35:04.550798Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0032129287719726562, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__payment_method_card_payment_method_id.f246b11438", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payment_method_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method_card\"\nwhere payment_method_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.551793Z", "completed_at": "2024-08-05T17:35:04.554481Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.554699Z", "completed_at": "2024-08-05T17:35:04.554704Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0033698081970214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__invoice_invoice_id__source_relation.f632654e72", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        invoice_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice\"\n    group by invoice_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.555690Z", "completed_at": "2024-08-05T17:35:04.558259Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.558463Z", "completed_at": "2024-08-05T17:35:04.558468Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.003223896026611328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__invoice_invoice_id.34cc0ff095", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect invoice_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice\"\nwhere invoice_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.559437Z", "completed_at": "2024-08-05T17:35:04.562874Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.563082Z", "completed_at": "2024-08-05T17:35:04.563087Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004106998443603516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__payment_method_payment_method_id__source_relation.02a8143517", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        payment_method_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method\"\n    group by payment_method_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.564135Z", "completed_at": "2024-08-05T17:35:04.566859Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.567082Z", "completed_at": "2024-08-05T17:35:04.567087Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0034699440002441406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__payment_method_payment_method_id.0a8907c471", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payment_method_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method\"\nwhere payment_method_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.278625Z", "completed_at": "2024-08-05T17:35:04.542800Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.543254Z", "completed_at": "2024-08-05T17:35:04.543258Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.29370689392089844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__refund", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__refund_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    cast(null as TEXT) as \n    \n    payment_intent_id\n    \n , \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    failure_balance_transaction_id\n    \n as \n    \n    failure_balance_transaction_id\n    \n, \n    \n    \n    failure_reason\n    \n as \n    \n    failure_reason\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    reason\n    \n as \n    \n    reason\n    \n, \n    \n    \n    receipt_number\n    \n as \n    \n    receipt_number\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as refund_id,\n        payment_intent_id,\n        balance_transaction_id,\n        charge_id,\n        amount,\n        cast(created as timestamp) as created_at,\n        currency,\n        description,\n        metadata,\n        reason,\n        receipt_number,\n        status,\n        source_relation\n\n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__refund\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.568098Z", "completed_at": "2024-08-05T17:35:04.571357Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.571940Z", "completed_at": "2024-08-05T17:35:04.571944Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0043027400970458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__product_product_id__source_relation.cfe44d459e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        product_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__product\"\n    group by product_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.573722Z", "completed_at": "2024-08-05T17:35:04.579337Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.579787Z", "completed_at": "2024-08-05T17:35:04.579792Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00699305534362793, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__price_plan_price_plan_id__source_relation.3d189cd99d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        price_plan_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__price_plan\"\n    group by price_plan_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.576495Z", "completed_at": "2024-08-05T17:35:04.579534Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.580172Z", "completed_at": "2024-08-05T17:35:04.580178Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007135152816772461, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__payout_payout_id__source_relation.f9897a29ec", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        payout_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payout\"\n    group by payout_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.585219Z", "completed_at": "2024-08-05T17:35:04.588137Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.588550Z", "completed_at": "2024-08-05T17:35:04.588556Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007318019866943359, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__refund_refund_id__source_relation.93aa6111ec", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        refund_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__refund\"\n    group by refund_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.581905Z", "completed_at": "2024-08-05T17:35:04.588335Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.588914Z", "completed_at": "2024-08-05T17:35:04.588918Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007909297943115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__payout_payout_id.6864a8acfc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payout_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payout\"\nwhere payout_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.589978Z", "completed_at": "2024-08-05T17:35:04.592702Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.592914Z", "completed_at": "2024-08-05T17:35:04.592919Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0034208297729492188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__refund_refund_id.7c6dcedec0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect refund_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__refund\"\nwhere refund_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.413603Z", "completed_at": "2024-08-05T17:35:04.678097Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.678352Z", "completed_at": "2024-08-05T17:35:04.678359Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.2944352626800537, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__subscription", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__subscription_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    application_fee_percent\n    \n as \n    \n    application_fee_percent\n    \n, \n    \n    \n    billing\n    \n as \n    \n    billing\n    \n, \n    \n    \n    billing_cycle_anchor\n    \n as \n    \n    billing_cycle_anchor\n    \n, \n    \n    \n    billing_threshold_amount_gte\n    \n as \n    \n    billing_threshold_amount_gte\n    \n, \n    \n    \n    billing_threshold_reset_billing_cycle_anchor\n    \n as \n    \n    billing_threshold_reset_billing_cycle_anchor\n    \n, \n    \n    \n    cancel_at\n    \n as \n    \n    cancel_at\n    \n, \n    \n    \n    cancel_at_period_end\n    \n as \n    \n    cancel_at_period_end\n    \n, \n    \n    \n    canceled_at\n    \n as \n    \n    canceled_at\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    current_period_end\n    \n as \n    \n    current_period_end\n    \n, \n    \n    \n    current_period_start\n    \n as \n    \n    current_period_start\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    days_until_due\n    \n as \n    \n    days_until_due\n    \n, \n    \n    \n    default_source_id\n    \n as \n    \n    default_source_id\n    \n, \n    \n    \n    ended_at\n    \n as \n    \n    ended_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as TEXT) as \n    \n    latest_invoice_id\n    \n , \n    cast(null as TEXT) as \n    \n    default_payment_method_id\n    \n , \n    cast(null as TEXT) as \n    \n    pending_setup_intent_id\n    \n , \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    start_date\n    \n as \n    \n    start_date\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    tax_percent\n    \n as \n    \n    tax_percent\n    \n, \n    \n    \n    trial_end\n    \n as \n    \n    trial_end\n    \n, \n    \n    \n    trial_start\n    \n as \n    \n    trial_start\n    \n, \n    cast(null as TEXT) as \n    \n    pause_collection_behavior\n    \n , \n    cast(null as timestamp) as \n    \n    pause_collection_resumes_at\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as subscription_id,\n        latest_invoice_id,\n        customer_id,\n        default_payment_method_id,\n        pending_setup_intent_id,\n        status,\n        billing,\n        billing_cycle_anchor,\n        cast(cancel_at as timestamp) as cancel_at,\n        cancel_at_period_end as is_cancel_at_period_end,\n        cast(canceled_at as timestamp) as canceled_at,\n        cast(created as timestamp) as created_at,\n        current_period_start,\n        current_period_end,\n        days_until_due,\n        metadata,\n        cast(start_date as timestamp) as start_date_at,\n        cast(ended_at as timestamp) as ended_at,\n        pause_collection_behavior,\n        cast(pause_collection_resumes_at as timestamp) as pause_collection_resumes_at,\n        source_relation\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n    \n        and coalesce(_fivetran_active, true)\n    \n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__subscription\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.708681Z", "completed_at": "2024-08-05T17:35:04.714666Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.714925Z", "completed_at": "2024-08-05T17:35:04.714931Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.006951093673706055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__subscription_subscription_id__source_relation.1b87d4205c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        subscription_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__subscription\"\n    group by subscription_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.712208Z", "completed_at": "2024-08-05T17:35:04.715300Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.715584Z", "completed_at": "2024-08-05T17:35:04.715588Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.003949880599975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__subscription_subscription_id.b242b1f7bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subscription_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__subscription\"\nwhere subscription_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.447346Z", "completed_at": "2024-08-05T17:35:04.706780Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.707027Z", "completed_at": "2024-08-05T17:35:04.707033Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2849159240722656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__transfer", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__transfer_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amount_reversed\n    \n as \n    \n    amount_reversed\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    destination\n    \n as \n    \n    destination\n    \n, \n    \n    \n    destination_payment\n    \n as \n    \n    destination_payment\n    \n, \n    \n    \n    destination_payment_id\n    \n as \n    \n    destination_payment_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    reversed\n    \n as \n    \n    reversed\n    \n, \n    \n    \n    source_transaction\n    \n as \n    \n    source_transaction\n    \n, \n    \n    \n    source_transaction_id\n    \n as \n    \n    source_transaction_id\n    \n, \n    \n    \n    source_type\n    \n as \n    \n    source_type\n    \n, \n    \n    \n    transfer_group\n    \n as \n    \n    transfer_group\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as transfer_id,\n        amount as transfer_amount,\n        amount_reversed as transfer_amount_reversed,\n        balance_transaction_id,\n        cast(created as timestamp) as transfer_created_at,\n        currency as transfer_currency,\n        description as transfer_description,\n        destination as transfer_destination,\n        destination_payment,\n        destination_payment_id,\n        metadata as transfer_metadata,\n        reversed as transfer_is_reversed,\n        source_transaction,\n        source_transaction_id,\n        source_type,\n        transfer_group,\n        source_relation\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__transfer\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-05T17:35:04.732509Z", "completed_at": "2024-08-05T17:35:04.735849Z"}, {"name": "execute", "started_at": "2024-08-05T17:35:04.736098Z", "completed_at": "2024-08-05T17:35:04.736104Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.004082918167114258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__transfer_transfer_id__source_relation.ade160ba67", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transfer_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__transfer\"\n    group by transfer_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}], "elapsed_time": 3.203590154647827, "args": {"log_level": "info", "require_resource_names_without_spaces": false, "log_format": "default", "favor_state": false, "cache_selected_only": false, "version_check": true, "enable_legacy_logger": false, "log_format_file": "debug", "use_colors_file": true, "partial_parse_file_diff": true, "quiet": false, "log_file_max_bytes": 10485760, "show_resource_report": false, "partial_parse": true, "printer_width": 80, "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/standardized_models/billing/dbt_stripe_source/integration_tests/logs", "profiles_dir": "/Users/joseph.markiewicz/.dbt", "write_json": true, "macro_debugging": false, "populate_cache": true, "indirect_selection": "eager", "vars": {}, "select": [], "require_explicit_package_overrides_for_builtin_materializations": true, "warn_error_options": {"include": [], "exclude": []}, "static_parser": true, "which": "generate", "print": true, "strict_mode": false, "invocation_command": "dbt docs generate -t postgres", "exclude": [], "log_level_file": "debug", "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/standardized_models/billing/dbt_stripe_source/integration_tests", "send_anonymous_usage_stats": true, "static": false, "defer": false, "introspect": true, "target": "postgres", "use_colors": true, "empty_catalog": false, "compile": true, "source_freshness_run_project_hooks": false}}