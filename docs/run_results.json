{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.9", "generated_at": "2024-04-16T03:38:41.340657Z", "invocation_id": "f7d7b453-984c-4a6b-a051-7f8d89b954c8", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:28.977263Z", "completed_at": "2024-04-16T03:38:29.296473Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:29.297123Z", "completed_at": "2024-04-16T03:38:29.297138Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.36891794204711914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__card_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`card`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__card_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:28.932914Z", "completed_at": "2024-04-16T03:38:29.351228Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:29.351888Z", "completed_at": "2024-04-16T03:38:29.351896Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.4256460666656494, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__account_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`account`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__account_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:28.957090Z", "completed_at": "2024-04-16T03:38:29.359050Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:29.359619Z", "completed_at": "2024-04-16T03:38:29.359625Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4322779178619385, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__balance_transaction_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`balance_transaction`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__balance_transaction_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:28.979191Z", "completed_at": "2024-04-16T03:38:29.553004Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:29.553522Z", "completed_at": "2024-04-16T03:38:29.553530Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.6245229244232178, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__charge_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`charge`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__charge_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:29.299040Z", "completed_at": "2024-04-16T03:38:29.785112Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:29.787102Z", "completed_at": "2024-04-16T03:38:29.787124Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4909021854400635, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__customer_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`customer`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__customer_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:29.555413Z", "completed_at": "2024-04-16T03:38:29.808784Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:29.810155Z", "completed_at": "2024-04-16T03:38:29.810174Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.2566051483154297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__invoice_line_item_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`invoice_line_item`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__invoice_line_item_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:29.353955Z", "completed_at": "2024-04-16T03:38:29.829001Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:29.829623Z", "completed_at": "2024-04-16T03:38:29.829630Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.47696495056152344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__dispute_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`dispute`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__dispute_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:29.361655Z", "completed_at": "2024-04-16T03:38:29.859322Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:29.859913Z", "completed_at": "2024-04-16T03:38:29.859922Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.49952220916748047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__fee_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`fee`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__fee_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:29.792891Z", "completed_at": "2024-04-16T03:38:30.098785Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:30.101151Z", "completed_at": "2024-04-16T03:38:30.101167Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.31153202056884766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__invoice_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`invoice`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__invoice_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:29.831801Z", "completed_at": "2024-04-16T03:38:30.099536Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:30.101587Z", "completed_at": "2024-04-16T03:38:30.101594Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2727530002593994, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_method_card_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`payment_method_card`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_method_card_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:29.814399Z", "completed_at": "2024-04-16T03:38:30.189150Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:30.190586Z", "completed_at": "2024-04-16T03:38:30.190595Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.37868404388427734, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_intent_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`payment_intent`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_intent_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:29.861998Z", "completed_at": "2024-04-16T03:38:30.189979Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:30.191635Z", "completed_at": "2024-04-16T03:38:30.191639Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3312530517578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_method_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`payment_method`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_method_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:30.193838Z", "completed_at": "2024-04-16T03:38:30.493020Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:30.495493Z", "completed_at": "2024-04-16T03:38:30.495524Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3044919967651367, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__refund_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`refund`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__refund_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:30.108035Z", "completed_at": "2024-04-16T03:38:30.580651Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:30.582631Z", "completed_at": "2024-04-16T03:38:30.582647Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4795069694519043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payout_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`payout`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payout_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:30.501153Z", "completed_at": "2024-04-16T03:38:30.886712Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:30.888862Z", "completed_at": "2024-04-16T03:38:30.888907Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3924238681793213, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__transfer_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`transfer`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__transfer_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:30.588299Z", "completed_at": "2024-04-16T03:38:30.985155Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:30.985663Z", "completed_at": "2024-04-16T03:38:30.985668Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3994460105895996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__card", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__card_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    address_city\n    \n as \n    \n    address_city\n    \n, \n    \n    \n    address_country\n    \n as \n    \n    address_country\n    \n, \n    \n    \n    address_line_1\n    \n as \n    \n    address_line_1\n    \n, \n    \n    \n    address_line_1_check\n    \n as \n    \n    address_line_1_check\n    \n, \n    \n    \n    address_line_2\n    \n as \n    \n    address_line_2\n    \n, \n    \n    \n    address_state\n    \n as \n    \n    address_state\n    \n, \n    \n    \n    address_zip\n    \n as \n    \n    address_zip\n    \n, \n    \n    \n    address_zip_check\n    \n as \n    \n    address_zip_check\n    \n, \n    \n    \n    brand\n    \n as \n    \n    brand\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    cvc_check\n    \n as \n    \n    cvc_check\n    \n, \n    \n    \n    dynamic_last_4\n    \n as \n    \n    dynamic_last_4\n    \n, \n    \n    \n    exp_month\n    \n as \n    \n    exp_month\n    \n, \n    \n    \n    exp_year\n    \n as \n    \n    exp_year\n    \n, \n    \n    \n    fingerprint\n    \n as \n    \n    fingerprint\n    \n, \n    \n    \n    funding\n    \n as \n    \n    funding\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    last_4\n    \n as \n    \n    last_4\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    network\n    \n as \n    \n    network\n    \n, \n    \n    \n    recipient\n    \n as \n    \n    recipient\n    \n, \n    \n    \n    tokenization_method\n    \n as \n    \n    tokenization_method\n    \n, \n    \n    \n    wallet_type\n    \n as \n    \n    wallet_type\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as card_id,\n        account_id,\n        address_city as card_address_city,\n        address_country as card_address_country,\n        address_line_1 as card_address_line_1,\n        address_line_2 as card_address_line_2,\n        address_state as card_address_state,\n        address_zip as card_address_postal_code,\n        wallet_type,\n        brand,\n        country,\n        cast(created as timestamp) as created_at,\n        customer_id,\n        name as card_name,\n        recipient,\n        funding,\n        source_relation\n        \n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__card`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:30.896425Z", "completed_at": "2024-04-16T03:38:31.278569Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:31.280306Z", "completed_at": "2024-04-16T03:38:31.280315Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.38762688636779785, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__account", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__account_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    business_profile_name\n    \n as \n    \n    business_profile_name\n    \n, \n    \n    \n    business_profile_mcc\n    \n as \n    \n    business_profile_mcc\n    \n, \n    \n    \n    business_type\n    \n as \n    \n    business_type\n    \n, \n    \n    \n    charges_enabled\n    \n as \n    \n    charges_enabled\n    \n, \n    \n    \n    company_address_city\n    \n as \n    \n    company_address_city\n    \n, \n    \n    \n    company_address_country\n    \n as \n    \n    company_address_country\n    \n, \n    \n    \n    company_address_line_1\n    \n as \n    \n    company_address_line_1\n    \n, \n    \n    \n    company_address_line_2\n    \n as \n    \n    company_address_line_2\n    \n, \n    \n    \n    company_address_postal_code\n    \n as \n    \n    company_address_postal_code\n    \n, \n    \n    \n    company_address_state\n    \n as \n    \n    company_address_state\n    \n, \n    \n    \n    company_name\n    \n as \n    \n    company_name\n    \n, \n    \n    \n    company_phone\n    \n as \n    \n    company_phone\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    default_currency\n    \n as \n    \n    default_currency\n    \n, \n    \n    \n    details_submitted\n    \n as \n    \n    details_submitted\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    payouts_enabled\n    \n as \n    \n    payouts_enabled\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as account_id,\n        business_profile_mcc,\n        business_profile_name,\n        business_type,\n        charges_enabled,\n        company_address_city,\n        company_address_country,\n        company_address_line_1,\n        company_address_line_2,\n        company_address_postal_code,\n        company_address_state,\n        company_name,\n        company_phone,\n        country,\n        cast(created as timestamp) as created_at,\n        default_currency,\n        email,\n        is_deleted,\n        metadata,\n        payouts_enabled as is_payouts_enabled,\n        type as account_type,\n        source_relation\n\n        \n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__account`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:30.987277Z", "completed_at": "2024-04-16T03:38:31.279039Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:31.280756Z", "completed_at": "2024-04-16T03:38:31.280763Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2956109046936035, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__balance_transaction", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__balance_transaction_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    available_on\n    \n as \n    \n    available_on\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    exchange_rate\n    \n as \n    \n    exchange_rate\n    \n, \n    \n    \n    fee\n    \n as \n    \n    fee\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    net\n    \n as \n    \n    net\n    \n, \n    \n    \n    payout_id\n    \n as \n    \n    payout_id\n    \n, \n    \n    \n    reporting_category\n    \n as \n    \n    reporting_category\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as balance_transaction_id,\n        amount,\n        cast(available_on as timestamp) as available_on,\n        cast(created as timestamp) as created_at,\n        connected_account_id,\n        currency,\n        description,\n        exchange_rate,\n        fee,\n        net,\n        reporting_category,\n        source,\n        status,\n        type,\n        source_relation\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__balance_transaction`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:31.289990Z", "completed_at": "2024-04-16T03:38:31.711693Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:31.712439Z", "completed_at": "2024-04-16T03:38:31.712448Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.4287910461425781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__customer", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__customer_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account_balance\n    \n as \n    \n    account_balance\n    \n, \n    \n    \n    address_city\n    \n as \n    \n    address_city\n    \n, \n    \n    \n    address_country\n    \n as \n    \n    address_country\n    \n, \n    \n    \n    address_line_1\n    \n as \n    \n    address_line_1\n    \n, \n    \n    \n    address_line_2\n    \n as \n    \n    address_line_2\n    \n, \n    \n    \n    address_postal_code\n    \n as \n    \n    address_postal_code\n    \n, \n    \n    \n    address_state\n    \n as \n    \n    address_state\n    \n, \n    \n    \n    balance\n    \n as \n    \n    balance\n    \n, \n    \n    \n    bank_account_id\n    \n as \n    \n    bank_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    default_card_id\n    \n as \n    \n    default_card_id\n    \n, \n    \n    \n    delinquent\n    \n as \n    \n    delinquent\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    invoice_prefix\n    \n as \n    \n    invoice_prefix\n    \n, \n    \n    \n    invoice_settings_default_payment_method\n    \n as \n    \n    invoice_settings_default_payment_method\n    \n, \n    \n    \n    invoice_settings_footer\n    \n as \n    \n    invoice_settings_footer\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    shipping_address_city\n    \n as \n    \n    shipping_address_city\n    \n, \n    \n    \n    shipping_address_country\n    \n as \n    \n    shipping_address_country\n    \n, \n    \n    \n    shipping_address_line_1\n    \n as \n    \n    shipping_address_line_1\n    \n, \n    \n    \n    shipping_address_line_2\n    \n as \n    \n    shipping_address_line_2\n    \n, \n    \n    \n    shipping_address_postal_code\n    \n as \n    \n    shipping_address_postal_code\n    \n, \n    \n    \n    shipping_address_state\n    \n as \n    \n    shipping_address_state\n    \n, \n    \n    \n    shipping_carrier\n    \n as \n    \n    shipping_carrier\n    \n, \n    \n    \n    shipping_name\n    \n as \n    \n    shipping_name\n    \n, \n    \n    \n    shipping_phone\n    \n as \n    \n    shipping_phone\n    \n, \n    \n    \n    shipping_tracking_number\n    \n as \n    \n    shipping_tracking_number\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    tax_exempt\n    \n as \n    \n    tax_exempt\n    \n, \n    \n    \n    tax_info_tax_id\n    \n as \n    \n    tax_info_tax_id\n    \n, \n    \n    \n    tax_info_type\n    \n as \n    \n    tax_info_type\n    \n, \n    \n    \n    tax_info_verification_status\n    \n as \n    \n    tax_info_verification_status\n    \n, \n    \n    \n    tax_info_verification_verified_name\n    \n as \n    \n    tax_info_verification_verified_name\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as customer_id,\n        account_balance,\n        address_city as customer_address_city,\n        address_country as customer_address_country,\n        address_line_1 as customer_address_line_1,\n        address_line_2 as customer_address_line_2,\n        address_postal_code as customer_address_postal_code,\n        address_state as customer_address_state,\n        balance as customer_balance,\n        bank_account_id,\n        cast(created as timestamp) as created_at,\n        currency,\n        default_card_id,\n        delinquent as is_delinquent,\n        description,\n        email,\n        metadata,\n        name as customer_name,\n        phone,\n        shipping_address_city,\n        shipping_address_country,\n        shipping_address_line_1,\n        shipping_address_line_2,\n        shipping_address_postal_code,\n        shipping_address_state,\n        shipping_name,\n        shipping_phone,\n        source_relation,\n        coalesce(is_deleted, false) as is_deleted\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__customer`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:31.285389Z", "completed_at": "2024-04-16T03:38:31.746146Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:31.746699Z", "completed_at": "2024-04-16T03:38:31.746705Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.46345019340515137, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__charge", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__charge_tmp`\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amount_refunded\n    \n as \n    \n    amount_refunded\n    \n, \n    \n    \n    application\n    \n as \n    \n    application\n    \n, \n    \n    \n    application_fee_amount\n    \n as \n    \n    application_fee_amount\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    bank_account_id\n    \n as \n    \n    bank_account_id\n    \n, \n    \n    \n    calculated_statement_descriptor\n    \n as \n    \n    calculated_statement_descriptor\n    \n, \n    \n    \n    captured\n    \n as \n    \n    captured\n    \n, \n    \n    \n    card_id\n    \n as \n    \n    card_id\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    destination\n    \n as \n    \n    destination\n    \n, \n    \n    \n    failure_code\n    \n as \n    \n    failure_code\n    \n, \n    \n    \n    failure_message\n    \n as \n    \n    failure_message\n    \n, \n    \n    \n    fraud_details_stripe_report\n    \n as \n    \n    fraud_details_stripe_report\n    \n, \n    \n    \n    fraud_details_user_report\n    \n as \n    \n    fraud_details_user_report\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    invoice_id\n    \n as \n    \n    invoice_id\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    on_behalf_of\n    \n as \n    \n    on_behalf_of\n    \n, \n    \n    \n    outcome_network_status\n    \n as \n    \n    outcome_network_status\n    \n, \n    \n    \n    outcome_reason\n    \n as \n    \n    outcome_reason\n    \n, \n    \n    \n    outcome_risk_level\n    \n as \n    \n    outcome_risk_level\n    \n, \n    \n    \n    outcome_risk_score\n    \n as \n    \n    outcome_risk_score\n    \n, \n    \n    \n    outcome_seller_message\n    \n as \n    \n    outcome_seller_message\n    \n, \n    \n    \n    outcome_type\n    \n as \n    \n    outcome_type\n    \n, \n    \n    \n    paid\n    \n as \n    \n    paid\n    \n, \n    \n    \n    payment_intent_id\n    \n as \n    \n    payment_intent_id\n    \n, \n    \n    \n    payment_method_id\n    \n as \n    \n    payment_method_id\n    \n, \n    \n    \n    receipt_email\n    \n as \n    \n    receipt_email\n    \n, \n    \n    \n    receipt_number\n    \n as \n    \n    receipt_number\n    \n, \n    \n    \n    receipt_url\n    \n as \n    \n    receipt_url\n    \n, \n    \n    \n    refunded\n    \n as \n    \n    refunded\n    \n, \n    \n    \n    shipping_address_city\n    \n as \n    \n    shipping_address_city\n    \n, \n    \n    \n    shipping_address_country\n    \n as \n    \n    shipping_address_country\n    \n, \n    \n    \n    shipping_address_line_1\n    \n as \n    \n    shipping_address_line_1\n    \n, \n    \n    \n    shipping_address_line_2\n    \n as \n    \n    shipping_address_line_2\n    \n, \n    \n    \n    shipping_address_postal_code\n    \n as \n    \n    shipping_address_postal_code\n    \n, \n    \n    \n    shipping_address_state\n    \n as \n    \n    shipping_address_state\n    \n, \n    \n    \n    shipping_carrier\n    \n as \n    \n    shipping_carrier\n    \n, \n    \n    \n    shipping_name\n    \n as \n    \n    shipping_name\n    \n, \n    \n    \n    shipping_phone\n    \n as \n    \n    shipping_phone\n    \n, \n    \n    \n    shipping_tracking_number\n    \n as \n    \n    shipping_tracking_number\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    source_transfer\n    \n as \n    \n    source_transfer\n    \n, \n    \n    \n    statement_descriptor\n    \n as \n    \n    statement_descriptor\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    transfer_data_destination\n    \n as \n    \n    transfer_data_destination\n    \n, \n    \n    \n    transfer_group\n    \n as \n    \n    transfer_group\n    \n, \n    \n    \n    transfer_id\n    \n as \n    \n    transfer_id\n    \n, \n    \n    \n    billing_detail_address_city\n    \n as \n    \n    billing_detail_address_city\n    \n, \n    \n    \n    billing_detail_address_country\n    \n as \n    \n    billing_detail_address_country\n    \n, \n    cast(null as string) as \n    \n    billing_detail_address_line1\n    \n , \n    cast(null as string) as \n    \n    billing_detail_address_line2\n    \n , \n    \n    \n    billing_detail_address_postal_code\n    \n as \n    \n    billing_detail_address_postal_code\n    \n, \n    \n    \n    billing_detail_address_state\n    \n as \n    \n    billing_detail_address_state\n    \n, \n    \n    \n    billing_detail_email\n    \n as \n    \n    billing_detail_email\n    \n, \n    \n    \n    billing_detail_name\n    \n as \n    \n    billing_detail_name\n    \n, \n    \n    \n    billing_detail_phone\n    \n as \n    \n    billing_detail_phone\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select \n        id as charge_id, \n        amount,\n        amount_refunded,\n        application_fee_amount,\n        balance_transaction_id,\n        captured as is_captured,\n        card_id,\n        cast(created as timestamp) as created_at,\n        connected_account_id,\n        customer_id,\n        currency,\n        description,\n        failure_code,\n        failure_message,\n        metadata,\n        paid as is_paid,\n        payment_intent_id,\n        payment_method_id,\n        receipt_email,\n        receipt_number,\n        refunded as is_refunded,\n        status,\n        shipping_address_city,\n        shipping_address_country,\n        shipping_address_line_1,\n        shipping_address_line_2,\n        shipping_address_postal_code,\n        shipping_address_state,\n        shipping_carrier,\n        shipping_name,\n        shipping_phone,\n        shipping_tracking_number,\n        source_id,\n        source_transfer,\n        statement_descriptor,\n        invoice_id,\n        calculated_statement_descriptor,\n        billing_detail_address_city,\n        billing_detail_address_country,\n        billing_detail_address_line1,\n        billing_detail_address_line2,\n        billing_detail_address_postal_code,\n        billing_detail_address_state,\n        billing_detail_email,\n        billing_detail_name,\n        billing_detail_phone,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__charge`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:31.742344Z", "completed_at": "2024-04-16T03:38:32.060368Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:32.061416Z", "completed_at": "2024-04-16T03:38:32.061428Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.34797191619873047, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__invoice_line_item", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__invoice_line_item_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    discountable\n    \n as \n    \n    discountable\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    invoice_id\n    \n as \n    \n    invoice_id\n    \n, \n    \n    \n    invoice_item_id\n    \n as \n    \n    invoice_item_id\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    period_end\n    \n as \n    \n    period_end\n    \n, \n    \n    \n    period_start\n    \n as \n    \n    period_start\n    \n, \n    \n    \n    plan_id\n    \n as \n    \n    plan_id\n    \n, \n    \n    \n    price_id\n    \n as \n    \n    price_id\n    \n, \n    \n    \n    proration\n    \n as \n    \n    proration\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    subscription_id\n    \n as \n    \n    subscription_id\n    \n, \n    \n    \n    subscription_item_id\n    \n as \n    \n    subscription_item_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    unique_id\n    \n as \n    \n    unique_id\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as invoice_line_item_id,\n        invoice_id,\n        invoice_item_id,\n        amount,\n        currency,\n        description,\n        discountable as is_discountable,\n        plan_id,\n        price_id,\n        proration,\n        quantity,\n        subscription_id,\n        subscription_item_id,\n        type,\n        unique_id as unique_invoice_line_item_id,\n        period_start,\n        period_end,\n        source_relation\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n\n    \n    and id not like 'sub%' -- ids starting with 'sub' are temporary and are replaced by permanent ids starting with 'sli' \n    \n\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__invoice_line_item`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:31.748122Z", "completed_at": "2024-04-16T03:38:32.100701Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:32.101225Z", "completed_at": "2024-04-16T03:38:32.101232Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3540191650390625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__dispute", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__dispute_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    balance_transaction\n    \n as \n    \n    balance_transaction\n    \n, \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    evidence_access_activity_log\n    \n as \n    \n    evidence_access_activity_log\n    \n, \n    \n    \n    evidence_billing_address\n    \n as \n    \n    evidence_billing_address\n    \n, \n    \n    \n    evidence_cancellation_policy\n    \n as \n    \n    evidence_cancellation_policy\n    \n, \n    \n    \n    evidence_cancellation_policy_disclosure\n    \n as \n    \n    evidence_cancellation_policy_disclosure\n    \n, \n    \n    \n    evidence_cancellation_rebuttal\n    \n as \n    \n    evidence_cancellation_rebuttal\n    \n, \n    \n    \n    evidence_customer_communication\n    \n as \n    \n    evidence_customer_communication\n    \n, \n    \n    \n    evidence_customer_email_address\n    \n as \n    \n    evidence_customer_email_address\n    \n, \n    \n    \n    evidence_customer_name\n    \n as \n    \n    evidence_customer_name\n    \n, \n    \n    \n    evidence_customer_purchase_ip\n    \n as \n    \n    evidence_customer_purchase_ip\n    \n, \n    \n    \n    evidence_customer_signature\n    \n as \n    \n    evidence_customer_signature\n    \n, \n    \n    \n    evidence_details_due_by\n    \n as \n    \n    evidence_details_due_by\n    \n, \n    \n    \n    evidence_details_has_evidence\n    \n as \n    \n    evidence_details_has_evidence\n    \n, \n    \n    \n    evidence_details_past_due\n    \n as \n    \n    evidence_details_past_due\n    \n, \n    \n    \n    evidence_details_submission_count\n    \n as \n    \n    evidence_details_submission_count\n    \n, \n    \n    \n    evidence_duplicate_charge_documentation\n    \n as \n    \n    evidence_duplicate_charge_documentation\n    \n, \n    \n    \n    evidence_duplicate_charge_explanation\n    \n as \n    \n    evidence_duplicate_charge_explanation\n    \n, \n    \n    \n    evidence_duplicate_charge_id\n    \n as \n    \n    evidence_duplicate_charge_id\n    \n, \n    \n    \n    evidence_product_description\n    \n as \n    \n    evidence_product_description\n    \n, \n    \n    \n    evidence_receipt\n    \n as \n    \n    evidence_receipt\n    \n, \n    \n    \n    evidence_refund_policy\n    \n as \n    \n    evidence_refund_policy\n    \n, \n    \n    \n    evidence_refund_policy_disclosure\n    \n as \n    \n    evidence_refund_policy_disclosure\n    \n, \n    \n    \n    evidence_refund_refusal_explanation\n    \n as \n    \n    evidence_refund_refusal_explanation\n    \n, \n    \n    \n    evidence_service_date\n    \n as \n    \n    evidence_service_date\n    \n, \n    \n    \n    evidence_service_documentation\n    \n as \n    \n    evidence_service_documentation\n    \n, \n    \n    \n    evidence_shipping_address\n    \n as \n    \n    evidence_shipping_address\n    \n, \n    \n    \n    evidence_shipping_carrier\n    \n as \n    \n    evidence_shipping_carrier\n    \n, \n    \n    \n    evidence_shipping_date\n    \n as \n    \n    evidence_shipping_date\n    \n, \n    \n    \n    evidence_shipping_documentation\n    \n as \n    \n    evidence_shipping_documentation\n    \n, \n    \n    \n    evidence_shipping_tracking_number\n    \n as \n    \n    evidence_shipping_tracking_number\n    \n, \n    \n    \n    evidence_uncategorized_file\n    \n as \n    \n    evidence_uncategorized_file\n    \n, \n    \n    \n    evidence_uncategorized_text\n    \n as \n    \n    evidence_uncategorized_text\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_charge_refundable\n    \n as \n    \n    is_charge_refundable\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    reason\n    \n as \n    \n    reason\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as dispute_id,\n        amount as dispute_amount,\n        balance_transaction,\n        charge_id,\n        connected_account_id,\n        cast(created as timestamp) as dispute_created_at,\n        currency as dispute_currency,\n        evidence_access_activity_log,\n        evidence_billing_address,\n        evidence_cancellation_policy,\n        evidence_cancellation_policy_disclosure,\n        evidence_cancellation_rebuttal,\n        evidence_customer_communication,\n        evidence_customer_email_address,\n        evidence_customer_name,\n        evidence_customer_purchase_ip,\n        evidence_customer_signature,\n        evidence_details_due_by,\n        evidence_details_has_evidence,\n        evidence_details_past_due,\n        evidence_details_submission_count,\n        evidence_duplicate_charge_documentation,\n        evidence_duplicate_charge_explanation,\n        evidence_duplicate_charge_id,\n        evidence_product_description,\n        evidence_receipt,\n        evidence_refund_policy,\n        evidence_refund_policy_disclosure,\n        evidence_refund_refusal_explanation,\n        evidence_service_date,\n        evidence_service_documentation,\n        evidence_shipping_address,\n        evidence_shipping_carrier,\n        evidence_shipping_date,\n        evidence_shipping_documentation,\n        evidence_shipping_tracking_number,\n        evidence_uncategorized_file,\n        evidence_uncategorized_text,\n        is_charge_refundable,\n        metadata as dispute_metadata,\n        reason as dispute_reason,\n        status as dispute_status,\n        source_relation\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__dispute`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:32.064973Z", "completed_at": "2024-04-16T03:38:32.385981Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:32.387207Z", "completed_at": "2024-04-16T03:38:32.387222Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.32462477684020996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__fee", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__fee_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    application\n    \n as \n    \n    application\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        balance_transaction_id,\n        index,\n        amount,\n        application,\n        currency,\n        description,\n        type,\n        source_relation\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__fee`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:32.102863Z", "completed_at": "2024-04-16T03:38:32.492306Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:32.492803Z", "completed_at": "2024-04-16T03:38:32.492809Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3909111022949219, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__invoice", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__invoice_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount_due\n    \n as \n    \n    amount_due\n    \n, \n    \n    \n    amount_paid\n    \n as \n    \n    amount_paid\n    \n, \n    \n    \n    amount_remaining\n    \n as \n    \n    amount_remaining\n    \n, \n    \n    \n    application_fee_amount\n    \n as \n    \n    application_fee_amount\n    \n, \n    \n    \n    post_payment_credit_notes_amount\n    \n as \n    \n    post_payment_credit_notes_amount\n    \n, \n    \n    \n    pre_payment_credit_notes_amount\n    \n as \n    \n    pre_payment_credit_notes_amount\n    \n, \n    \n    \n    attempt_count\n    \n as \n    \n    attempt_count\n    \n, \n    \n    \n    attempted\n    \n as \n    \n    attempted\n    \n, \n    \n    \n    auto_advance\n    \n as \n    \n    auto_advance\n    \n, \n    \n    \n    billing\n    \n as \n    \n    billing\n    \n, \n    \n    \n    billing_reason\n    \n as \n    \n    billing_reason\n    \n, \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    default_source_id\n    \n as \n    \n    default_source_id\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    due_date\n    \n as \n    \n    due_date\n    \n, \n    \n    \n    ending_balance\n    \n as \n    \n    ending_balance\n    \n, \n    \n    \n    finalized_at\n    \n as \n    \n    finalized_at\n    \n, \n    \n    \n    footer\n    \n as \n    \n    footer\n    \n, \n    \n    \n    hosted_invoice_url\n    \n as \n    \n    hosted_invoice_url\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    invoice_pdf\n    \n as \n    \n    invoice_pdf\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    next_payment_attempt\n    \n as \n    \n    next_payment_attempt\n    \n, \n    \n    \n    number\n    \n as \n    \n    number\n    \n, \n    \n    \n    paid\n    \n as \n    \n    paid\n    \n, \n    \n    \n    default_payment_method_id\n    \n as \n    \n    default_payment_method_id\n    \n, \n    \n    \n    payment_intent_id\n    \n as \n    \n    payment_intent_id\n    \n, \n    \n    \n    subscription_id\n    \n as \n    \n    subscription_id\n    \n, \n    \n    \n    period_end\n    \n as \n    \n    period_end\n    \n, \n    \n    \n    period_start\n    \n as \n    \n    period_start\n    \n, \n    \n    \n    receipt_number\n    \n as \n    \n    receipt_number\n    \n, \n    \n    \n    starting_balance\n    \n as \n    \n    starting_balance\n    \n, \n    \n    \n    statement_descriptor\n    \n as \n    \n    statement_descriptor\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    status_transitions_finalized_at\n    \n as \n    \n    status_transitions_finalized_at\n    \n, \n    \n    \n    status_transitions_marked_uncollectible_at\n    \n as \n    \n    status_transitions_marked_uncollectible_at\n    \n, \n    \n    \n    status_transitions_paid_at\n    \n as \n    \n    status_transitions_paid_at\n    \n, \n    \n    \n    status_transitions_voided_at\n    \n as \n    \n    status_transitions_voided_at\n    \n, \n    \n    \n    subscription_proration_date\n    \n as \n    \n    subscription_proration_date\n    \n, \n    \n    \n    subtotal\n    \n as \n    \n    subtotal\n    \n, \n    \n    \n    tax\n    \n as \n    \n    tax\n    \n, \n    \n    \n    tax_percent\n    \n as \n    \n    tax_percent\n    \n, \n    \n    \n    threshold_reason_amount_gte\n    \n as \n    \n    threshold_reason_amount_gte\n    \n, \n    \n    \n    total\n    \n as \n    \n    total\n    \n, \n    \n    \n    webhooks_delivered_at\n    \n as \n    \n    webhooks_delivered_at\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as invoice_id,\n        default_payment_method_id,\n        payment_intent_id,\n        subscription_id,\n        amount_due,\n        amount_paid,\n        amount_remaining,\n        post_payment_credit_notes_amount,\n        pre_payment_credit_notes_amount,\n        attempt_count,\n        auto_advance,\n        billing_reason,\n        charge_id,\n        cast(created as timestamp) as created_at,\n        currency,\n        customer_id,\n        description,\n        due_date,\n        metadata,\n        number,\n        paid as is_paid,\n        receipt_number,\n        status,\n        subtotal,\n        tax,\n        tax_percent,\n        total,\n        period_start,\n        period_end,\n        cast(status_transitions_finalized_at as timestamp) as status_transitions_finalized_at,\n        cast(status_transitions_marked_uncollectible_at as timestamp) as status_transitions_marked_uncollectible_at,\n        cast(status_transitions_paid_at as timestamp) as status_transitions_paid_at,\n        cast(status_transitions_voided_at as timestamp) as status_transitions_voided_at,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n    and not coalesce(is_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__invoice`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:32.390878Z", "completed_at": "2024-04-16T03:38:32.786307Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:32.787281Z", "completed_at": "2024-04-16T03:38:32.787293Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3985919952392578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_method_card", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_method_card_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    brand\n    \n as \n    \n    brand\n    \n, \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    \n    \n    funding\n    \n as \n    \n    funding\n    \n, \n    \n    \n    payment_method_id\n    \n as \n    \n    payment_method_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    wallet_type\n    \n as \n    \n    wallet_type\n    \n, \n    \n    \n    three_d_secure_authentication_flow\n    \n as \n    \n    three_d_secure_authentication_flow\n    \n, \n    \n    \n    three_d_secure_result\n    \n as \n    \n    three_d_secure_result\n    \n, \n    \n    \n    three_d_secure_result_reason\n    \n as \n    \n    three_d_secure_result_reason\n    \n, \n    \n    \n    three_d_secure_version\n    \n as \n    \n    three_d_secure_version\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        payment_method_id,\n        brand,\n        funding,\n        charge_id,\n        type,\n        wallet_type,\n        three_d_secure_authentication_flow,\n        three_d_secure_result,\n        three_d_secure_result_reason,\n        three_d_secure_version,\n        source_relation\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_method_card`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:32.494347Z", "completed_at": "2024-04-16T03:38:32.859110Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:32.859828Z", "completed_at": "2024-04-16T03:38:32.859837Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3666677474975586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_intent", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_intent_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amount_capturable\n    \n as \n    \n    amount_capturable\n    \n, \n    \n    \n    amount_received\n    \n as \n    \n    amount_received\n    \n, \n    \n    \n    application\n    \n as \n    \n    application\n    \n, \n    \n    \n    application_fee_amount\n    \n as \n    \n    application_fee_amount\n    \n, \n    \n    \n    canceled_at\n    \n as \n    \n    canceled_at\n    \n, \n    \n    \n    cancellation_reason\n    \n as \n    \n    cancellation_reason\n    \n, \n    \n    \n    capture_method\n    \n as \n    \n    capture_method\n    \n, \n    \n    \n    confirmation_method\n    \n as \n    \n    confirmation_method\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_payment_error_charge_id\n    \n as \n    \n    last_payment_error_charge_id\n    \n, \n    \n    \n    last_payment_error_code\n    \n as \n    \n    last_payment_error_code\n    \n, \n    \n    \n    last_payment_error_decline_code\n    \n as \n    \n    last_payment_error_decline_code\n    \n, \n    \n    \n    last_payment_error_doc_url\n    \n as \n    \n    last_payment_error_doc_url\n    \n, \n    \n    \n    last_payment_error_message\n    \n as \n    \n    last_payment_error_message\n    \n, \n    \n    \n    last_payment_error_param\n    \n as \n    \n    last_payment_error_param\n    \n, \n    \n    \n    last_payment_error_source_id\n    \n as \n    \n    last_payment_error_source_id\n    \n, \n    \n    \n    last_payment_error_type\n    \n as \n    \n    last_payment_error_type\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    on_behalf_of\n    \n as \n    \n    on_behalf_of\n    \n, \n    \n    \n    payment_method_id\n    \n as \n    \n    payment_method_id\n    \n, \n    \n    \n    receipt_email\n    \n as \n    \n    receipt_email\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    statement_descriptor\n    \n as \n    \n    statement_descriptor\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    transfer_data_destination\n    \n as \n    \n    transfer_data_destination\n    \n, \n    \n    \n    transfer_group\n    \n as \n    \n    transfer_group\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as payment_intent_id,\n        amount,\n        amount_capturable,\n        amount_received,\n        application,\n        application_fee_amount,\n        cast(canceled_at as timestamp) as canceled_at,\n        cancellation_reason,\n        capture_method,\n        confirmation_method,\n        cast(created as timestamp) as created_at,\n        currency,\n        customer_id,\n        description,\n        metadata,\n        payment_method_id,\n        receipt_email,\n        statement_descriptor,\n        status,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_intent`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:32.790859Z", "completed_at": "2024-04-16T03:38:33.214283Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.215089Z", "completed_at": "2024-04-16T03:38:33.215098Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.42597198486328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_method", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_method_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    billing_detail_address_city\n    \n as \n    \n    billing_detail_address_city\n    \n, \n    \n    \n    billing_detail_address_country\n    \n as \n    \n    billing_detail_address_country\n    \n, \n    \n    \n    billing_detail_address_line_1\n    \n as \n    \n    billing_detail_address_line_1\n    \n, \n    \n    \n    billing_detail_address_line_2\n    \n as \n    \n    billing_detail_address_line_2\n    \n, \n    \n    \n    billing_detail_address_postal_code\n    \n as \n    \n    billing_detail_address_postal_code\n    \n, \n    \n    \n    billing_detail_address_state\n    \n as \n    \n    billing_detail_address_state\n    \n, \n    \n    \n    billing_detail_email\n    \n as \n    \n    billing_detail_email\n    \n, \n    \n    \n    billing_detail_name\n    \n as \n    \n    billing_detail_name\n    \n, \n    \n    \n    billing_detail_phone\n    \n as \n    \n    billing_detail_phone\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as payment_method_id,\n        cast(created as timestamp) as created_at,\n        customer_id,\n        metadata,\n        type,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_method`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:32.862143Z", "completed_at": "2024-04-16T03:38:33.336778Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.338009Z", "completed_at": "2024-04-16T03:38:33.338022Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.47765088081359863, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__refund", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__refund_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    \n    \n    payment_intent_id\n    \n as \n    \n    payment_intent_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    failure_balance_transaction_id\n    \n as \n    \n    failure_balance_transaction_id\n    \n, \n    \n    \n    failure_reason\n    \n as \n    \n    failure_reason\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    reason\n    \n as \n    \n    reason\n    \n, \n    \n    \n    receipt_number\n    \n as \n    \n    receipt_number\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as refund_id,\n        payment_intent_id,\n        balance_transaction_id,\n        charge_id,\n        amount,\n        cast(created as timestamp) as created_at,\n        currency,\n        description,\n        metadata,\n        reason,\n        receipt_number,\n        status,\n        source_relation\n\n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__refund`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.341374Z", "completed_at": "2024-04-16T03:38:33.707701Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.708789Z", "completed_at": "2024-04-16T03:38:33.708808Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.369661808013916, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__transfer", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__transfer_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amount_reversed\n    \n as \n    \n    amount_reversed\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    destination\n    \n as \n    \n    destination\n    \n, \n    \n    \n    destination_payment\n    \n as \n    \n    destination_payment\n    \n, \n    \n    \n    destination_payment_id\n    \n as \n    \n    destination_payment_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    reversed\n    \n as \n    \n    reversed\n    \n, \n    \n    \n    source_transaction\n    \n as \n    \n    source_transaction\n    \n, \n    \n    \n    source_transaction_id\n    \n as \n    \n    source_transaction_id\n    \n, \n    \n    \n    source_type\n    \n as \n    \n    source_type\n    \n, \n    \n    \n    transfer_group\n    \n as \n    \n    transfer_group\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as transfer_id,\n        amount as transfer_amount,\n        amount_reversed as transfer_amount_reversed,\n        balance_transaction_id,\n        cast(created as timestamp) as transfer_created_at,\n        currency as transfer_currency,\n        description as transfer_description,\n        destination as transfer_destination,\n        destination_payment,\n        destination_payment_id,\n        metadata as transfer_metadata,\n        reversed as transfer_is_reversed,\n        source_transaction,\n        source_transaction_id,\n        source_type,\n        transfer_group,\n        source_relation\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__transfer`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.713463Z", "completed_at": "2024-04-16T03:38:33.747124Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.749924Z", "completed_at": "2024-04-16T03:38:33.749936Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.039053916931152344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__card_card_id__source_relation.6e04594797", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        card_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__card`\n    group by card_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.217248Z", "completed_at": "2024-04-16T03:38:33.747767Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.750302Z", "completed_at": "2024-04-16T03:38:33.750308Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.5355877876281738, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payout", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payout_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    arrival_date\n    \n as \n    \n    arrival_date\n    \n, \n    \n    \n    automatic\n    \n as \n    \n    automatic\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    destination_bank_account_id\n    \n as \n    \n    destination_bank_account_id\n    \n, \n    \n    \n    destination_card_id\n    \n as \n    \n    destination_card_id\n    \n, \n    \n    \n    failure_balance_transaction_id\n    \n as \n    \n    failure_balance_transaction_id\n    \n, \n    \n    \n    failure_code\n    \n as \n    \n    failure_code\n    \n, \n    \n    \n    failure_message\n    \n as \n    \n    failure_message\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    method\n    \n as \n    \n    method\n    \n, \n    \n    \n    source_type\n    \n as \n    \n    source_type\n    \n, \n    \n    \n    statement_descriptor\n    \n as \n    \n    statement_descriptor\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as payout_id,\n        amount,\n        cast(arrival_date as timestamp) as arrival_date_at,\n        automatic as is_automatic,\n        balance_transaction_id,\n        cast(created as timestamp) as created_at,\n        currency,\n        description,\n        destination_bank_account_id,\n        destination_card_id,\n        metadata,\n        method,\n        source_type,\n        status,\n        type,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payout`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.754558Z", "completed_at": "2024-04-16T03:38:33.771468Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.782977Z", "completed_at": "2024-04-16T03:38:33.783013Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03386497497558594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__card_card_id.edadd3106a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect card_id\nfrom `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__card`\nwhere card_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.762436Z", "completed_at": "2024-04-16T03:38:33.781441Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.787698Z", "completed_at": "2024-04-16T03:38:33.787705Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03475594520568848, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__account_account_id__source_relation.822bb93896", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        account_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__account`\n    group by account_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.789791Z", "completed_at": "2024-04-16T03:38:33.795182Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.795536Z", "completed_at": "2024-04-16T03:38:33.795542Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0071010589599609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__account_account_id.374858379a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__account`\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.792694Z", "completed_at": "2024-04-16T03:38:33.796059Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.796906Z", "completed_at": "2024-04-16T03:38:33.796909Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007927179336547852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__balance_transaction_balance_transaction_id__source_relation.e83fa67eba", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        balance_transaction_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__balance_transaction`\n    group by balance_transaction_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.797616Z", "completed_at": "2024-04-16T03:38:33.802854Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.803223Z", "completed_at": "2024-04-16T03:38:33.803229Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0069010257720947266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__balance_transaction_balance_transaction_id.0ac20e778f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect balance_transaction_id\nfrom `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__balance_transaction`\nwhere balance_transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.800524Z", "completed_at": "2024-04-16T03:38:33.803734Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.804554Z", "completed_at": "2024-04-16T03:38:33.804557Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0050048828125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__customer_customer_id__source_relation.3fa0f43271", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        customer_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__customer`\n    group by customer_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.805246Z", "completed_at": "2024-04-16T03:38:33.812014Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.813069Z", "completed_at": "2024-04-16T03:38:33.813088Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009342193603515625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__customer_customer_id.2e70421da0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__customer`\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.808565Z", "completed_at": "2024-04-16T03:38:33.814054Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.815717Z", "completed_at": "2024-04-16T03:38:33.815724Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.008195877075195312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__charge_charge_id__source_relation.4616b292a1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        charge_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__charge`\n    group by charge_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.816476Z", "completed_at": "2024-04-16T03:38:33.825729Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.826263Z", "completed_at": "2024-04-16T03:38:33.826270Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.011362075805664062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__charge_charge_id.8941bc704a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect charge_id\nfrom `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__charge`\nwhere charge_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.820579Z", "completed_at": "2024-04-16T03:38:33.827219Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.828170Z", "completed_at": "2024-04-16T03:38:33.828175Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.011000633239746094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__invoice_line_item_invoice_line_item_id__invoice_id__source_relation.d2ff4b8aed", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        invoice_line_item_id, invoice_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__invoice_line_item`\n    group by invoice_line_item_id, invoice_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.828361Z", "completed_at": "2024-04-16T03:38:33.835343Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.836371Z", "completed_at": "2024-04-16T03:38:33.836378Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.009889841079711914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__invoice_line_item_invoice_line_item_id.5b9c83b5f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect invoice_line_item_id\nfrom `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__invoice_line_item`\nwhere invoice_line_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.832164Z", "completed_at": "2024-04-16T03:38:33.836741Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.838437Z", "completed_at": "2024-04-16T03:38:33.838443Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0075778961181640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__dispute_dispute_id__source_relation.3fe3205476", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        dispute_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__dispute`\n    group by dispute_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.839797Z", "completed_at": "2024-04-16T03:38:33.845395Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.845765Z", "completed_at": "2024-04-16T03:38:33.845770Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007421016693115234, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__fee_balance_transaction_id__index__source_relation.d2b1cfff07", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        balance_transaction_id, index, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__fee`\n    group by balance_transaction_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.843053Z", "completed_at": "2024-04-16T03:38:33.846334Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.847120Z", "completed_at": "2024-04-16T03:38:33.847123Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005028724670410156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__fee_balance_transaction_id.725d4ac005", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect balance_transaction_id\nfrom `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__fee`\nwhere balance_transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.847733Z", "completed_at": "2024-04-16T03:38:33.851937Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.852299Z", "completed_at": "2024-04-16T03:38:33.852302Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.005915164947509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__invoice_invoice_id__source_relation.f632654e72", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        invoice_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__invoice`\n    group by invoice_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.850241Z", "completed_at": "2024-04-16T03:38:33.852469Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.853400Z", "completed_at": "2024-04-16T03:38:33.853403Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.004179954528808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__invoice_invoice_id.34cc0ff095", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect invoice_id\nfrom `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__invoice`\nwhere invoice_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.854667Z", "completed_at": "2024-04-16T03:38:33.858720Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.859101Z", "completed_at": "2024-04-16T03:38:33.859105Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.005979061126708984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__payment_method_card_payment_method_id__source_relation.fe1f48acd0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        payment_method_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_method_card`\n    group by payment_method_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.857036Z", "completed_at": "2024-04-16T03:38:33.859269Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.860112Z", "completed_at": "2024-04-16T03:38:33.860115Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.004144906997680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__payment_method_card_payment_method_id.f246b11438", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payment_method_id\nfrom `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_method_card`\nwhere payment_method_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.861342Z", "completed_at": "2024-04-16T03:38:33.866873Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.867241Z", "completed_at": "2024-04-16T03:38:33.867245Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007418155670166016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__payment_intent_payment_intent_id__source_relation.046730da02", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        payment_intent_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_intent`\n    group by payment_intent_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.865163Z", "completed_at": "2024-04-16T03:38:33.867421Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.868324Z", "completed_at": "2024-04-16T03:38:33.868328Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.004235029220581055, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__payment_intent_payment_intent_id.cb5b4d09eb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payment_intent_id\nfrom `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_intent`\nwhere payment_intent_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.869435Z", "completed_at": "2024-04-16T03:38:33.873324Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.873703Z", "completed_at": "2024-04-16T03:38:33.873707Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.005503177642822266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__payment_method_payment_method_id__source_relation.02a8143517", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        payment_method_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_method`\n    group by payment_method_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.871770Z", "completed_at": "2024-04-16T03:38:33.874381Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.875138Z", "completed_at": "2024-04-16T03:38:33.875140Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.006136178970336914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__payment_method_payment_method_id.0a8907c471", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payment_method_id\nfrom `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payment_method`\nwhere payment_method_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.875302Z", "completed_at": "2024-04-16T03:38:33.878284Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.880236Z", "completed_at": "2024-04-16T03:38:33.880238Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.005984067916870117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__refund_refund_id__source_relation.93aa6111ec", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        refund_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__refund`\n    group by refund_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.878454Z", "completed_at": "2024-04-16T03:38:33.880934Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.881735Z", "completed_at": "2024-04-16T03:38:33.881738Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.005997180938720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__refund_refund_id.7c6dcedec0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect refund_id\nfrom `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__refund`\nwhere refund_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.881897Z", "completed_at": "2024-04-16T03:38:33.886559Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.886914Z", "completed_at": "2024-04-16T03:38:33.886917Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.006098031997680664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__transfer_transfer_id__source_relation.ade160ba67", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transfer_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__transfer`\n    group by transfer_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.884744Z", "completed_at": "2024-04-16T03:38:33.887412Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.888165Z", "completed_at": "2024-04-16T03:38:33.888168Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.004293918609619141, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__payout_payout_id__source_relation.f9897a29ec", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        payout_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payout`\n    group by payout_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:33.888818Z", "completed_at": "2024-04-16T03:38:33.891399Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:33.891728Z", "completed_at": "2024-04-16T03:38:33.891730Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.004082918167114258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__payout_payout_id.6864a8acfc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payout_id\nfrom `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__payout`\nwhere payout_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:30.196021Z", "completed_at": "2024-04-16T03:38:36.139573Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:36.142356Z", "completed_at": "2024-04-16T03:38:36.142388Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 5.951496839523315, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__subscription_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`subscription_history`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__subscription_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:30.178868Z", "completed_at": "2024-04-16T03:38:37.663678Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:37.666935Z", "completed_at": "2024-04-16T03:38:37.666976Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 7.562870979309082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__price_plan_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n         \n            \n        select * \n    from `private-internal`.`stripe`.`price`", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__price_plan_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:36.149841Z", "completed_at": "2024-04-16T03:38:38.906961Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:38.908835Z", "completed_at": "2024-04-16T03:38:38.908872Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 2.7629640102386475, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__subscription", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__subscription_tmp`\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    application_fee_percent\n    \n as \n    \n    application_fee_percent\n    \n, \n    \n    \n    billing\n    \n as \n    \n    billing\n    \n, \n    \n    \n    billing_cycle_anchor\n    \n as \n    \n    billing_cycle_anchor\n    \n, \n    \n    \n    billing_threshold_amount_gte\n    \n as \n    \n    billing_threshold_amount_gte\n    \n, \n    \n    \n    billing_threshold_reset_billing_cycle_anchor\n    \n as \n    \n    billing_threshold_reset_billing_cycle_anchor\n    \n, \n    \n    \n    cancel_at\n    \n as \n    \n    cancel_at\n    \n, \n    \n    \n    cancel_at_period_end\n    \n as \n    \n    cancel_at_period_end\n    \n, \n    \n    \n    canceled_at\n    \n as \n    \n    canceled_at\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    current_period_end\n    \n as \n    \n    current_period_end\n    \n, \n    \n    \n    current_period_start\n    \n as \n    \n    current_period_start\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    days_until_due\n    \n as \n    \n    days_until_due\n    \n, \n    \n    \n    default_source_id\n    \n as \n    \n    default_source_id\n    \n, \n    \n    \n    ended_at\n    \n as \n    \n    ended_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    latest_invoice_id\n    \n as \n    \n    latest_invoice_id\n    \n, \n    \n    \n    default_payment_method_id\n    \n as \n    \n    default_payment_method_id\n    \n, \n    \n    \n    pending_setup_intent_id\n    \n as \n    \n    pending_setup_intent_id\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    start_date\n    \n as \n    \n    start_date\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    tax_percent\n    \n as \n    \n    tax_percent\n    \n, \n    \n    \n    trial_end\n    \n as \n    \n    trial_end\n    \n, \n    \n    \n    trial_start\n    \n as \n    \n    trial_start\n    \n, \n    \n    \n    pause_collection_behavior\n    \n as \n    \n    pause_collection_behavior\n    \n, \n    \n    \n    pause_collection_resumes_at\n    \n as \n    \n    pause_collection_resumes_at\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as subscription_id,\n        latest_invoice_id,\n        customer_id,\n        default_payment_method_id,\n        pending_setup_intent_id,\n        status,\n        billing,\n        billing_cycle_anchor,\n        cast(cancel_at as timestamp) as cancel_at,\n        cancel_at_period_end as is_cancel_at_period_end,\n        cast(canceled_at as timestamp) as canceled_at,\n        cast(created as timestamp) as created_at,\n        current_period_start,\n        current_period_end,\n        days_until_due,\n        metadata,\n        cast(start_date as timestamp) as start_date_at,\n        cast(ended_at as timestamp) as ended_at,\n        pause_collection_behavior,\n        cast(pause_collection_resumes_at as timestamp) as pause_collection_resumes_at,\n        source_relation\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n    \n        and coalesce(_fivetran_active, true)\n    \n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__subscription`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:38.918248Z", "completed_at": "2024-04-16T03:38:38.937010Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:38.939233Z", "completed_at": "2024-04-16T03:38:38.939244Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.026741981506347656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__subscription_subscription_id__source_relation.1b87d4205c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        subscription_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__subscription`\n    group by subscription_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:38.928456Z", "completed_at": "2024-04-16T03:38:38.937611Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:38.939755Z", "completed_at": "2024-04-16T03:38:38.939762Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.026163101196289062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__subscription_subscription_id.b242b1f7bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subscription_id\nfrom `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__subscription`\nwhere subscription_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:37.673306Z", "completed_at": "2024-04-16T03:38:41.320731Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:41.322060Z", "completed_at": "2024-04-16T03:38:41.322077Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 3.6517748832702637, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__price_plan", "compiled": true, "compiled_code": "\n\nwith price_plan as (\n\n    select * \n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__price_plan_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as is_active , \n    \n    \n    billing_scheme\n    \n as \n    \n    billing_scheme\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    nickname\n    \n as \n    \n    nickname\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n, \n    \n    \n    recurring_aggregate_usage\n    \n as \n    \n    recurring_aggregate_usage\n    \n, \n    \n    \n    recurring_interval\n    \n as \n    \n    recurring_interval\n    \n, \n    \n    \n    recurring_interval_count\n    \n as \n    \n    recurring_interval_count\n    \n, \n    \n    \n    recurring_usage_type\n    \n as \n    \n    recurring_usage_type\n    \n, \n    \n    \n    unit_amount\n    \n as \n    \n    unit_amount\n    \n, \n    \n    \n    unit_amount_decimal\n    \n as \n    \n    unit_amount_decimal\n    \n\n\n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from price_plan\n),\n\nfinal as (\n\n    select \n        id as price_plan_id,\n        is_active,\n        unit_amount,\n        currency,\n        recurring_interval,\n        recurring_interval_count,\n        recurring_usage_type,\n        recurring_aggregate_usage,\n        metadata,\n        nickname,\n        product_id,\n        billing_scheme,\n        cast(created as timestamp) as created_at,\n        is_deleted,\n        source_relation\n\n        \n        \n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__price_plan`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-04-16T03:38:41.326776Z", "completed_at": "2024-04-16T03:38:41.335809Z"}, {"name": "execute", "started_at": "2024-04-16T03:38:41.336801Z", "completed_at": "2024-04-16T03:38:41.336812Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.012210845947265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__price_plan_price_plan_id__source_relation.3d189cd99d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        price_plan_id, source_relation\n    from `dbt-package-testing`.`hubspot_integration_tests_55_stg_stripe`.`stg_stripe__price_plan`\n    group by price_plan_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}], "elapsed_time": 13.538865804672241, "args": {"enable_legacy_logger": false, "static": false, "log_path": "/Users/renee/Documents/dbt/stripe/develop/logs", "partial_parse_file_diff": true, "which": "generate", "write_json": true, "select": [], "use_colors": true, "send_anonymous_usage_stats": true, "printer_width": 80, "indirect_selection": "eager", "compile": true, "show_resource_report": false, "invocation_command": "dbt docs generate", "static_parser": true, "quiet": false, "macro_debugging": false, "project_dir": "/Users/renee/Documents/dbt/stripe/develop", "log_level": "info", "use_colors_file": true, "log_format": "default", "partial_parse": true, "version_check": true, "vars": {}, "profiles_dir": "/Users/renee/.dbt", "warn_error_options": {"include": [], "exclude": []}, "defer": false, "exclude": [], "introspect": true, "cache_selected_only": false, "empty_catalog": false, "populate_cache": true, "print": true, "favor_state": false, "log_level_file": "debug", "strict_mode": false, "log_file_max_bytes": 10485760, "log_format_file": "debug"}}