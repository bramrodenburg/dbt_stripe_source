{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.8.4", "generated_at": "2024-08-06T04:06:01.559401Z", "invocation_id": "40ef0378-d3f2-456f-af45-c11a367bbcec", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.617640Z", "completed_at": "2024-08-06T04:05:59.646254Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.646527Z", "completed_at": "2024-08-06T04:05:59.646541Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.031207799911499023, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__account_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"account_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__account_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.637917Z", "completed_at": "2024-08-06T04:05:59.647677Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.650706Z", "completed_at": "2024-08-06T04:05:59.650710Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.03465700149536133, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__balance_transaction_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"balance_transaction_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__balance_transaction_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.640424Z", "completed_at": "2024-08-06T04:05:59.650315Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.651126Z", "completed_at": "2024-08-06T04:05:59.651129Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.03433394432067871, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__card_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"card_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__card_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.642883Z", "completed_at": "2024-08-06T04:05:59.650516Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.651484Z", "completed_at": "2024-08-06T04:05:59.651488Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.03438997268676758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__charge_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"charge_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__charge_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.647934Z", "completed_at": "2024-08-06T04:05:59.652106Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.653180Z", "completed_at": "2024-08-06T04:05:59.653183Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0060617923736572266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__customer_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"customer_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__customer_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.654917Z", "completed_at": "2024-08-06T04:05:59.662640Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.666194Z", "completed_at": "2024-08-06T04:05:59.666201Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013374090194702148, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__discount_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"discount_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__discount_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.657633Z", "completed_at": "2024-08-06T04:05:59.666611Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.667393Z", "completed_at": "2024-08-06T04:05:59.667396Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.013922691345214844, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__dispute_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"dispute_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__dispute_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.659969Z", "completed_at": "2024-08-06T04:05:59.666822Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.667916Z", "completed_at": "2024-08-06T04:05:59.667920Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.014204025268554688, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__fee_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"fee_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__fee_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.662864Z", "completed_at": "2024-08-06T04:05:59.667725Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.668775Z", "completed_at": "2024-08-06T04:05:59.668777Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011433839797973633, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__invoice_line_item_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"invoice_line_item_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice_line_item_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.670267Z", "completed_at": "2024-08-06T04:05:59.678661Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.681383Z", "completed_at": "2024-08-06T04:05:59.681389Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.013195037841796875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__invoice_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"invoice_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.673584Z", "completed_at": "2024-08-06T04:05:59.681822Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.682579Z", "completed_at": "2024-08-06T04:05:59.682583Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.01306009292602539, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_intent_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"payment_intent_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_intent_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.676111Z", "completed_at": "2024-08-06T04:05:59.682273Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.683376Z", "completed_at": "2024-08-06T04:05:59.683381Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.013375043869018555, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_method_card_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"payment_method_card_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method_card_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.678914Z", "completed_at": "2024-08-06T04:05:59.682926Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.684036Z", "completed_at": "2024-08-06T04:05:59.684040Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.010968923568725586, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_method_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"payment_method_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.685349Z", "completed_at": "2024-08-06T04:05:59.698679Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.701673Z", "completed_at": "2024-08-06T04:05:59.701680Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.018616914749145508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payout_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"payout_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payout_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.689340Z", "completed_at": "2024-08-06T04:05:59.704359Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.705139Z", "completed_at": "2024-08-06T04:05:59.705144Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.02033710479736328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__price_plan_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"price_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__price_plan_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.699101Z", "completed_at": "2024-08-06T04:05:59.704959Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.705795Z", "completed_at": "2024-08-06T04:05:59.705798Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.017399072647094727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__product_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"product_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__product_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.702091Z", "completed_at": "2024-08-06T04:05:59.706096Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.707058Z", "completed_at": "2024-08-06T04:05:59.707061Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.018230199813842773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__refund_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"refund_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__refund_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.707668Z", "completed_at": "2024-08-06T04:05:59.718118Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.720231Z", "completed_at": "2024-08-06T04:05:59.720239Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.014764070510864258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__subscription_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"subscription_history_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__subscription_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.718319Z", "completed_at": "2024-08-06T04:05:59.719543Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.720760Z", "completed_at": "2024-08-06T04:05:59.720763Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.007138967514038086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.account_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.721167Z", "completed_at": "2024-08-06T04:05:59.722542Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.723936Z", "completed_at": "2024-08-06T04:05:59.723941Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009305000305175781, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.balance_transaction_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.714946Z", "completed_at": "2024-08-06T04:05:59.722822Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.724351Z", "completed_at": "2024-08-06T04:05:59.724355Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.016982078552246094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__transfer_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from \"postgres\".\"stripe_source_integrations_tests_5\".\"transfer_data\"", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__transfer_tmp\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.726729Z", "completed_at": "2024-08-06T04:05:59.728138Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.730451Z", "completed_at": "2024-08-06T04:05:59.730459Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.005800962448120117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.card_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.728486Z", "completed_at": "2024-08-06T04:05:59.729730Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.730941Z", "completed_at": "2024-08-06T04:05:59.730946Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0060138702392578125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.charge_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.731398Z", "completed_at": "2024-08-06T04:05:59.732470Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.735694Z", "completed_at": "2024-08-06T04:05:59.735699Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00952768325805664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.credit_note_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.732748Z", "completed_at": "2024-08-06T04:05:59.734830Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.736069Z", "completed_at": "2024-08-06T04:05:59.736073Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.009642839431762695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.credit_note_line_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.738272Z", "completed_at": "2024-08-06T04:05:59.739430Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.741496Z", "completed_at": "2024-08-06T04:05:59.741502Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.005143880844116211, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.customer_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.739711Z", "completed_at": "2024-08-06T04:05:59.740779Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.741859Z", "completed_at": "2024-08-06T04:05:59.741862Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.005258083343505859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.discount_data_postgres", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.742169Z", "completed_at": "2024-08-06T04:05:59.743342Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.745344Z", "completed_at": "2024-08-06T04:05:59.745348Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007631063461303711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.dispute_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.743554Z", "completed_at": "2024-08-06T04:05:59.744577Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.745716Z", "completed_at": "2024-08-06T04:05:59.745719Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007745981216430664, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.fee_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.747656Z", "completed_at": "2024-08-06T04:05:59.749516Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.751310Z", "completed_at": "2024-08-06T04:05:59.751315Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0053408145904541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.invoice_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.749771Z", "completed_at": "2024-08-06T04:05:59.750733Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.751643Z", "completed_at": "2024-08-06T04:05:59.751646Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.00543522834777832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.invoice_line_item_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.751952Z", "completed_at": "2024-08-06T04:05:59.752951Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.754819Z", "completed_at": "2024-08-06T04:05:59.754823Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007627010345458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.payment_intent_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.753189Z", "completed_at": "2024-08-06T04:05:59.754165Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.755181Z", "completed_at": "2024-08-06T04:05:59.755184Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007776975631713867, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.payment_method_card_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.757317Z", "completed_at": "2024-08-06T04:05:59.758341Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.760111Z", "completed_at": "2024-08-06T04:05:59.760116Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.004602909088134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.payment_method_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.758538Z", "completed_at": "2024-08-06T04:05:59.759522Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.760443Z", "completed_at": "2024-08-06T04:05:59.760446Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0046808719635009766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.payout_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.760740Z", "completed_at": "2024-08-06T04:05:59.762592Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.764551Z", "completed_at": "2024-08-06T04:05:59.764555Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.007783174514770508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.plan_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.762849Z", "completed_at": "2024-08-06T04:05:59.763857Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.764892Z", "completed_at": "2024-08-06T04:05:59.764894Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.007842063903808594, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.price_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.766889Z", "completed_at": "2024-08-06T04:05:59.767911Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.769644Z", "completed_at": "2024-08-06T04:05:59.769648Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00446009635925293, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.product_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.768109Z", "completed_at": "2024-08-06T04:05:59.769054Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.769966Z", "completed_at": "2024-08-06T04:05:59.769969Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.0045468807220458984, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.refund_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.770262Z", "completed_at": "2024-08-06T04:05:59.771264Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.773096Z", "completed_at": "2024-08-06T04:05:59.773100Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00666499137878418, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.subscription_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.771473Z", "completed_at": "2024-08-06T04:05:59.772446Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.773421Z", "completed_at": "2024-08-06T04:05:59.773423Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.0075838565826416016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.subscription_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.776186Z", "completed_at": "2024-08-06T04:05:59.777225Z"}, {"name": "execute", "started_at": "2024-08-06T04:05:59.787361Z", "completed_at": "2024-08-06T04:05:59.787368Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.012882232666015625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.stripe_source_integration_tests.transfer_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.827200Z", "completed_at": "2024-08-06T04:06:00.237409Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:00.237669Z", "completed_at": "2024-08-06T04:06:00.237678Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.4367978572845459, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__charge", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__charge_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amount_refunded\n    \n as \n    \n    amount_refunded\n    \n, \n    \n    \n    application\n    \n as \n    \n    application\n    \n, \n    \n    \n    application_fee_amount\n    \n as \n    \n    application_fee_amount\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    bank_account_id\n    \n as \n    \n    bank_account_id\n    \n, \n    \n    \n    calculated_statement_descriptor\n    \n as \n    \n    calculated_statement_descriptor\n    \n, \n    \n    \n    captured\n    \n as \n    \n    captured\n    \n, \n    \n    \n    card_id\n    \n as \n    \n    card_id\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    destination\n    \n as \n    \n    destination\n    \n, \n    \n    \n    failure_code\n    \n as \n    \n    failure_code\n    \n, \n    \n    \n    failure_message\n    \n as \n    \n    failure_message\n    \n, \n    \n    \n    fraud_details_stripe_report\n    \n as \n    \n    fraud_details_stripe_report\n    \n, \n    \n    \n    fraud_details_user_report\n    \n as \n    \n    fraud_details_user_report\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    invoice_id\n    \n as \n    \n    invoice_id\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    on_behalf_of\n    \n as \n    \n    on_behalf_of\n    \n, \n    \n    \n    outcome_network_status\n    \n as \n    \n    outcome_network_status\n    \n, \n    \n    \n    outcome_reason\n    \n as \n    \n    outcome_reason\n    \n, \n    \n    \n    outcome_risk_level\n    \n as \n    \n    outcome_risk_level\n    \n, \n    \n    \n    outcome_risk_score\n    \n as \n    \n    outcome_risk_score\n    \n, \n    \n    \n    outcome_seller_message\n    \n as \n    \n    outcome_seller_message\n    \n, \n    \n    \n    outcome_type\n    \n as \n    \n    outcome_type\n    \n, \n    \n    \n    paid\n    \n as \n    \n    paid\n    \n, \n    \n    \n    payment_intent_id\n    \n as \n    \n    payment_intent_id\n    \n, \n    cast(null as TEXT) as \n    \n    payment_method_id\n    \n , \n    \n    \n    receipt_email\n    \n as \n    \n    receipt_email\n    \n, \n    \n    \n    receipt_number\n    \n as \n    \n    receipt_number\n    \n, \n    \n    \n    receipt_url\n    \n as \n    \n    receipt_url\n    \n, \n    \n    \n    refunded\n    \n as \n    \n    refunded\n    \n, \n    \n    \n    shipping_address_city\n    \n as \n    \n    shipping_address_city\n    \n, \n    \n    \n    shipping_address_country\n    \n as \n    \n    shipping_address_country\n    \n, \n    \n    \n    shipping_address_line_1\n    \n as \n    \n    shipping_address_line_1\n    \n, \n    \n    \n    shipping_address_line_2\n    \n as \n    \n    shipping_address_line_2\n    \n, \n    \n    \n    shipping_address_postal_code\n    \n as \n    \n    shipping_address_postal_code\n    \n, \n    \n    \n    shipping_address_state\n    \n as \n    \n    shipping_address_state\n    \n, \n    \n    \n    shipping_carrier\n    \n as \n    \n    shipping_carrier\n    \n, \n    \n    \n    shipping_name\n    \n as \n    \n    shipping_name\n    \n, \n    \n    \n    shipping_phone\n    \n as \n    \n    shipping_phone\n    \n, \n    \n    \n    shipping_tracking_number\n    \n as \n    \n    shipping_tracking_number\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    source_transfer\n    \n as \n    \n    source_transfer\n    \n, \n    \n    \n    statement_descriptor\n    \n as \n    \n    statement_descriptor\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    transfer_data_destination\n    \n as \n    \n    transfer_data_destination\n    \n, \n    \n    \n    transfer_group\n    \n as \n    \n    transfer_group\n    \n, \n    \n    \n    transfer_id\n    \n as \n    \n    transfer_id\n    \n, \n    cast(null as TEXT) as \n    \n    billing_detail_address_city\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_address_country\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_address_line1\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_address_line2\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_address_postal_code\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_address_state\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_email\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_name\n    \n , \n    cast(null as TEXT) as \n    \n    billing_detail_phone\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select \n        id as charge_id, \n        amount,\n        amount_refunded,\n        application_fee_amount,\n        balance_transaction_id,\n        captured as is_captured,\n        card_id,\n        cast(created as timestamp) as created_at,\n        connected_account_id,\n        customer_id,\n        currency,\n        description,\n        failure_code,\n        failure_message,\n        metadata,\n        paid as is_paid,\n        payment_intent_id,\n        payment_method_id,\n        receipt_email,\n        receipt_number,\n        refunded as is_refunded,\n        status,\n        shipping_address_city,\n        shipping_address_country,\n        shipping_address_line_1,\n        shipping_address_line_2,\n        shipping_address_postal_code,\n        shipping_address_state,\n        shipping_carrier,\n        shipping_name,\n        shipping_phone,\n        shipping_tracking_number,\n        source_id,\n        source_transfer,\n        statement_descriptor,\n        invoice_id,\n        calculated_statement_descriptor,\n        billing_detail_address_city,\n        billing_detail_address_country,\n        billing_detail_address_line1,\n        billing_detail_address_line2,\n        billing_detail_address_postal_code,\n        billing_detail_address_state,\n        billing_detail_email,\n        billing_detail_name,\n        billing_detail_phone,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__charge\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.777436Z", "completed_at": "2024-08-06T04:06:00.238875Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:00.239376Z", "completed_at": "2024-08-06T04:06:00.239384Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.488757848739624, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__account", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__account_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    business_profile_name\n    \n as \n    \n    business_profile_name\n    \n, \n    \n    \n    business_profile_mcc\n    \n as \n    \n    business_profile_mcc\n    \n, \n    \n    \n    business_type\n    \n as \n    \n    business_type\n    \n, \n    \n    \n    charges_enabled\n    \n as \n    \n    charges_enabled\n    \n, \n    \n    \n    company_address_city\n    \n as \n    \n    company_address_city\n    \n, \n    \n    \n    company_address_country\n    \n as \n    \n    company_address_country\n    \n, \n    \n    \n    company_address_line_1\n    \n as \n    \n    company_address_line_1\n    \n, \n    \n    \n    company_address_line_2\n    \n as \n    \n    company_address_line_2\n    \n, \n    \n    \n    company_address_postal_code\n    \n as \n    \n    company_address_postal_code\n    \n, \n    \n    \n    company_address_state\n    \n as \n    \n    company_address_state\n    \n, \n    \n    \n    company_name\n    \n as \n    \n    company_name\n    \n, \n    \n    \n    company_phone\n    \n as \n    \n    company_phone\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    default_currency\n    \n as \n    \n    default_currency\n    \n, \n    \n    \n    details_submitted\n    \n as \n    \n    details_submitted\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    payouts_enabled\n    \n as \n    \n    payouts_enabled\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as account_id,\n        business_profile_mcc,\n        business_profile_name,\n        business_type,\n        charges_enabled,\n        company_address_city,\n        company_address_country,\n        company_address_line_1,\n        company_address_line_2,\n        company_address_postal_code,\n        company_address_state,\n        company_name,\n        company_phone,\n        country,\n        cast(created as timestamp) as created_at,\n        default_currency,\n        email,\n        is_deleted,\n        metadata,\n        payouts_enabled as is_payouts_enabled,\n        type as account_type,\n        source_relation\n\n        \n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__account\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.787945Z", "completed_at": "2024-08-06T04:06:00.237982Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:00.238256Z", "completed_at": "2024-08-06T04:06:00.238260Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.4892878532409668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__balance_transaction", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__balance_transaction_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    available_on\n    \n as \n    \n    available_on\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    exchange_rate\n    \n as \n    \n    exchange_rate\n    \n, \n    \n    \n    fee\n    \n as \n    \n    fee\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    net\n    \n as \n    \n    net\n    \n, \n    \n    \n    payout_id\n    \n as \n    \n    payout_id\n    \n, \n    \n    \n    reporting_category\n    \n as \n    \n    reporting_category\n    \n, \n    \n    \n    source\n    \n as \n    \n    source\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as balance_transaction_id,\n        amount,\n        cast(available_on as timestamp) as available_on,\n        cast(created as timestamp) as created_at,\n        connected_account_id,\n        currency,\n        description,\n        exchange_rate,\n        fee,\n        net,\n        reporting_category,\n        source,\n        status,\n        type,\n        source_relation\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__balance_transaction\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:05:59.792110Z", "completed_at": "2024-08-06T04:06:00.238555Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:00.239150Z", "completed_at": "2024-08-06T04:06:00.239153Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.49016904830932617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__card", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__card_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    address_city\n    \n as \n    \n    address_city\n    \n, \n    \n    \n    address_country\n    \n as \n    \n    address_country\n    \n, \n    \n    \n    address_line_1\n    \n as \n    \n    address_line_1\n    \n, \n    \n    \n    address_line_1_check\n    \n as \n    \n    address_line_1_check\n    \n, \n    \n    \n    address_line_2\n    \n as \n    \n    address_line_2\n    \n, \n    \n    \n    address_state\n    \n as \n    \n    address_state\n    \n, \n    \n    \n    address_zip\n    \n as \n    \n    address_zip\n    \n, \n    \n    \n    address_zip_check\n    \n as \n    \n    address_zip_check\n    \n, \n    \n    \n    brand\n    \n as \n    \n    brand\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    country\n    \n as \n    \n    country\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    cvc_check\n    \n as \n    \n    cvc_check\n    \n, \n    \n    \n    dynamic_last_4\n    \n as \n    \n    dynamic_last_4\n    \n, \n    \n    \n    exp_month\n    \n as \n    \n    exp_month\n    \n, \n    \n    \n    exp_year\n    \n as \n    \n    exp_year\n    \n, \n    \n    \n    fingerprint\n    \n as \n    \n    fingerprint\n    \n, \n    \n    \n    funding\n    \n as \n    \n    funding\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    last_4\n    \n as \n    \n    last_4\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    network\n    \n as \n    \n    network\n    \n, \n    \n    \n    recipient\n    \n as \n    \n    recipient\n    \n, \n    \n    \n    tokenization_method\n    \n as \n    \n    tokenization_method\n    \n, \n    cast(null as TEXT) as \n    \n    wallet_type\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as card_id,\n        account_id,\n        address_city as card_address_city,\n        address_country as card_address_country,\n        address_line_1 as card_address_line_1,\n        address_line_2 as card_address_line_2,\n        address_state as card_address_state,\n        address_zip as card_address_postal_code,\n        wallet_type,\n        brand,\n        country,\n        cast(created as timestamp) as created_at,\n        customer_id,\n        name as card_name,\n        recipient,\n        funding,\n        source_relation\n        \n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__card\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:00.282119Z", "completed_at": "2024-08-06T04:06:00.529717Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:00.529960Z", "completed_at": "2024-08-06T04:06:00.529967Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2954549789428711, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__fee", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__fee_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    application\n    \n as \n    \n    application\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        balance_transaction_id,\n        index,\n        amount,\n        application,\n        currency,\n        description,\n        type,\n        source_relation\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__fee\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:00.277010Z", "completed_at": "2024-08-06T04:06:00.530248Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:00.530451Z", "completed_at": "2024-08-06T04:06:00.530455Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3084127902984619, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__dispute", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__dispute_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    balance_transaction\n    \n as \n    \n    balance_transaction\n    \n, \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    evidence_access_activity_log\n    \n as \n    \n    evidence_access_activity_log\n    \n, \n    \n    \n    evidence_billing_address\n    \n as \n    \n    evidence_billing_address\n    \n, \n    \n    \n    evidence_cancellation_policy\n    \n as \n    \n    evidence_cancellation_policy\n    \n, \n    \n    \n    evidence_cancellation_policy_disclosure\n    \n as \n    \n    evidence_cancellation_policy_disclosure\n    \n, \n    \n    \n    evidence_cancellation_rebuttal\n    \n as \n    \n    evidence_cancellation_rebuttal\n    \n, \n    \n    \n    evidence_customer_communication\n    \n as \n    \n    evidence_customer_communication\n    \n, \n    \n    \n    evidence_customer_email_address\n    \n as \n    \n    evidence_customer_email_address\n    \n, \n    \n    \n    evidence_customer_name\n    \n as \n    \n    evidence_customer_name\n    \n, \n    \n    \n    evidence_customer_purchase_ip\n    \n as \n    \n    evidence_customer_purchase_ip\n    \n, \n    \n    \n    evidence_customer_signature\n    \n as \n    \n    evidence_customer_signature\n    \n, \n    \n    \n    evidence_details_due_by\n    \n as \n    \n    evidence_details_due_by\n    \n, \n    \n    \n    evidence_details_has_evidence\n    \n as \n    \n    evidence_details_has_evidence\n    \n, \n    \n    \n    evidence_details_past_due\n    \n as \n    \n    evidence_details_past_due\n    \n, \n    \n    \n    evidence_details_submission_count\n    \n as \n    \n    evidence_details_submission_count\n    \n, \n    \n    \n    evidence_duplicate_charge_documentation\n    \n as \n    \n    evidence_duplicate_charge_documentation\n    \n, \n    \n    \n    evidence_duplicate_charge_explanation\n    \n as \n    \n    evidence_duplicate_charge_explanation\n    \n, \n    \n    \n    evidence_duplicate_charge_id\n    \n as \n    \n    evidence_duplicate_charge_id\n    \n, \n    \n    \n    evidence_product_description\n    \n as \n    \n    evidence_product_description\n    \n, \n    \n    \n    evidence_receipt\n    \n as \n    \n    evidence_receipt\n    \n, \n    \n    \n    evidence_refund_policy\n    \n as \n    \n    evidence_refund_policy\n    \n, \n    \n    \n    evidence_refund_policy_disclosure\n    \n as \n    \n    evidence_refund_policy_disclosure\n    \n, \n    \n    \n    evidence_refund_refusal_explanation\n    \n as \n    \n    evidence_refund_refusal_explanation\n    \n, \n    \n    \n    evidence_service_date\n    \n as \n    \n    evidence_service_date\n    \n, \n    \n    \n    evidence_service_documentation\n    \n as \n    \n    evidence_service_documentation\n    \n, \n    \n    \n    evidence_shipping_address\n    \n as \n    \n    evidence_shipping_address\n    \n, \n    \n    \n    evidence_shipping_carrier\n    \n as \n    \n    evidence_shipping_carrier\n    \n, \n    \n    \n    evidence_shipping_date\n    \n as \n    \n    evidence_shipping_date\n    \n, \n    \n    \n    evidence_shipping_documentation\n    \n as \n    \n    evidence_shipping_documentation\n    \n, \n    \n    \n    evidence_shipping_tracking_number\n    \n as \n    \n    evidence_shipping_tracking_number\n    \n, \n    \n    \n    evidence_uncategorized_file\n    \n as \n    \n    evidence_uncategorized_file\n    \n, \n    \n    \n    evidence_uncategorized_text\n    \n as \n    \n    evidence_uncategorized_text\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_charge_refundable\n    \n as \n    \n    is_charge_refundable\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    reason\n    \n as \n    \n    reason\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as dispute_id,\n        amount as dispute_amount,\n        balance_transaction,\n        charge_id,\n        connected_account_id,\n        cast(created as timestamp) as dispute_created_at,\n        currency as dispute_currency,\n        evidence_access_activity_log,\n        evidence_billing_address,\n        evidence_cancellation_policy,\n        evidence_cancellation_policy_disclosure,\n        evidence_cancellation_rebuttal,\n        evidence_customer_communication,\n        evidence_customer_email_address,\n        evidence_customer_name,\n        evidence_customer_purchase_ip,\n        evidence_customer_signature,\n        evidence_details_due_by,\n        evidence_details_has_evidence,\n        evidence_details_past_due,\n        evidence_details_submission_count,\n        evidence_duplicate_charge_documentation,\n        evidence_duplicate_charge_explanation,\n        evidence_duplicate_charge_id,\n        evidence_product_description,\n        evidence_receipt,\n        evidence_refund_policy,\n        evidence_refund_policy_disclosure,\n        evidence_refund_refusal_explanation,\n        evidence_service_date,\n        evidence_service_documentation,\n        evidence_shipping_address,\n        evidence_shipping_carrier,\n        evidence_shipping_date,\n        evidence_shipping_documentation,\n        evidence_shipping_tracking_number,\n        evidence_uncategorized_file,\n        evidence_uncategorized_text,\n        is_charge_refundable,\n        metadata as dispute_metadata,\n        reason as dispute_reason,\n        status as dispute_status,\n        source_relation\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__dispute\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:00.267354Z", "completed_at": "2024-08-06T04:06:00.575714Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:00.576568Z", "completed_at": "2024-08-06T04:06:00.576572Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.33745694160461426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__customer", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__customer_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    account_balance\n    \n as \n    \n    account_balance\n    \n, \n    \n    \n    address_city\n    \n as \n    \n    address_city\n    \n, \n    \n    \n    address_country\n    \n as \n    \n    address_country\n    \n, \n    \n    \n    address_line_1\n    \n as \n    \n    address_line_1\n    \n, \n    \n    \n    address_line_2\n    \n as \n    \n    address_line_2\n    \n, \n    \n    \n    address_postal_code\n    \n as \n    \n    address_postal_code\n    \n, \n    \n    \n    address_state\n    \n as \n    \n    address_state\n    \n, \n    \n    \n    balance\n    \n as \n    \n    balance\n    \n, \n    \n    \n    bank_account_id\n    \n as \n    \n    bank_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    default_card_id\n    \n as \n    \n    default_card_id\n    \n, \n    \n    \n    delinquent\n    \n as \n    \n    delinquent\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    email\n    \n as \n    \n    email\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    invoice_prefix\n    \n as \n    \n    invoice_prefix\n    \n, \n    \n    \n    invoice_settings_default_payment_method\n    \n as \n    \n    invoice_settings_default_payment_method\n    \n, \n    \n    \n    invoice_settings_footer\n    \n as \n    \n    invoice_settings_footer\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    cast(null as TEXT) as \n    \n    metadata\n    \n , \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    phone\n    \n as \n    \n    phone\n    \n, \n    \n    \n    shipping_address_city\n    \n as \n    \n    shipping_address_city\n    \n, \n    \n    \n    shipping_address_country\n    \n as \n    \n    shipping_address_country\n    \n, \n    \n    \n    shipping_address_line_1\n    \n as \n    \n    shipping_address_line_1\n    \n, \n    \n    \n    shipping_address_line_2\n    \n as \n    \n    shipping_address_line_2\n    \n, \n    \n    \n    shipping_address_postal_code\n    \n as \n    \n    shipping_address_postal_code\n    \n, \n    \n    \n    shipping_address_state\n    \n as \n    \n    shipping_address_state\n    \n, \n    \n    \n    shipping_carrier\n    \n as \n    \n    shipping_carrier\n    \n, \n    \n    \n    shipping_name\n    \n as \n    \n    shipping_name\n    \n, \n    \n    \n    shipping_phone\n    \n as \n    \n    shipping_phone\n    \n, \n    \n    \n    shipping_tracking_number\n    \n as \n    \n    shipping_tracking_number\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    tax_exempt\n    \n as \n    \n    tax_exempt\n    \n, \n    \n    \n    tax_info_tax_id\n    \n as \n    \n    tax_info_tax_id\n    \n, \n    \n    \n    tax_info_type\n    \n as \n    \n    tax_info_type\n    \n, \n    \n    \n    tax_info_verification_status\n    \n as \n    \n    tax_info_verification_status\n    \n, \n    \n    \n    tax_info_verification_verified_name\n    \n as \n    \n    tax_info_verification_verified_name\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        id as customer_id,\n        account_balance,\n        address_city as customer_address_city,\n        address_country as customer_address_country,\n        address_line_1 as customer_address_line_1,\n        address_line_2 as customer_address_line_2,\n        address_postal_code as customer_address_postal_code,\n        address_state as customer_address_state,\n        balance as customer_balance,\n        bank_account_id,\n        cast(created as timestamp) as created_at,\n        currency,\n        default_card_id,\n        delinquent as is_delinquent,\n        description,\n        email,\n        metadata,\n        name as customer_name,\n        phone,\n        shipping_address_city,\n        shipping_address_country,\n        shipping_address_line_1,\n        shipping_address_line_2,\n        shipping_address_postal_code,\n        shipping_address_state,\n        shipping_name,\n        shipping_phone,\n        source_relation,\n        coalesce(is_deleted, false) as is_deleted\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__customer\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:00.272087Z", "completed_at": "2024-08-06T04:06:00.576135Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:00.577039Z", "completed_at": "2024-08-06T04:06:00.577043Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3435070514678955, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__discount", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__discount_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    type_id\n    \n as \n    \n    type_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    checkout_session_id\n    \n as \n    \n    checkout_session_id\n    \n, \n    \n    \n    checkout_session_line_item_id\n    \n as \n    \n    checkout_session_line_item_id\n    \n, \n    \n    \n    coupon_id\n    \n as \n    \n    coupon_id\n    \n, \n    \n    \n    credit_note_line_item_id\n    \n as \n    \n    credit_note_line_item_id\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    invoice_id\n    \n as \n    \n    invoice_id\n    \n, \n    \n    \n    invoice_item_id\n    \n as \n    \n    invoice_item_id\n    \n, \n    \n    \n    promotion_code\n    \n as \n    \n    promotion_code\n    \n, \n    \n    \n    subscription_id\n    \n as \n    \n    subscription_id\n    \n, \n    \n    \n        \n            \n            \"end\"\n            \n        \n    \n as end_at , \n    \n    \n        \n            \n            \"start\"\n            \n        \n    \n as start_at \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as discount_id,\n        type,\n        type_id,\n        amount,\n        checkout_session_id,\n        checkout_session_line_item_id,\n        coupon_id,\n        credit_note_line_item_id,\n        customer_id,\n        cast(end_at as timestamp) as end_at, -- renamed in macro get_discount_columns, source column name: end\n        invoice_id,\n        invoice_item_id,\n        promotion_code,\n        cast(start_at as timestamp) as start_at, -- renamed in macro get_discount_columns, source column name: start\n        subscription_id,\n        source_relation\n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__discount\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:00.582432Z", "completed_at": "2024-08-06T04:06:00.822485Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:00.822858Z", "completed_at": "2024-08-06T04:06:00.822870Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2677149772644043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__invoice", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    cast(null as integer) as \n    \n    amount_due\n    \n , \n    cast(null as integer) as \n    \n    amount_paid\n    \n , \n    cast(null as integer) as \n    \n    amount_remaining\n    \n , \n    cast(null as integer) as \n    \n    application_fee_amount\n    \n , \n    cast(null as integer) as \n    \n    post_payment_credit_notes_amount\n    \n , \n    cast(null as integer) as \n    \n    pre_payment_credit_notes_amount\n    \n , \n    cast(null as integer) as \n    \n    attempt_count\n    \n , \n    cast(null as boolean) as \n    \n    attempted\n    \n , \n    cast(null as boolean) as \n    \n    auto_advance\n    \n , \n    cast(null as TEXT) as \n    \n    billing\n    \n , \n    cast(null as TEXT) as \n    \n    billing_reason\n    \n , \n    cast(null as TEXT) as \n    \n    charge_id\n    \n , \n    cast(null as timestamp) as \n    \n    created\n    \n , \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    cast(null as TEXT) as \n    \n    default_source_id\n    \n , \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    cast(null as timestamp) as \n    \n    due_date\n    \n , \n    cast(null as integer) as \n    \n    ending_balance\n    \n , \n    cast(null as timestamp) as \n    \n    finalized_at\n    \n , \n    cast(null as TEXT) as \n    \n    footer\n    \n , \n    cast(null as TEXT) as \n    \n    hosted_invoice_url\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as TEXT) as \n    \n    invoice_pdf\n    \n , \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    cast(null as timestamp) as \n    \n    next_payment_attempt\n    \n , \n    cast(null as TEXT) as \n    \n    number\n    \n , \n    cast(null as boolean) as \n    \n    paid\n    \n , \n    cast(null as TEXT) as \n    \n    default_payment_method_id\n    \n , \n    cast(null as TEXT) as \n    \n    payment_intent_id\n    \n , \n    \n    \n    subscription_id\n    \n as \n    \n    subscription_id\n    \n, \n    \n    \n    period_end\n    \n as \n    \n    period_end\n    \n, \n    \n    \n    period_start\n    \n as \n    \n    period_start\n    \n, \n    cast(null as TEXT) as \n    \n    receipt_number\n    \n , \n    cast(null as integer) as \n    \n    starting_balance\n    \n , \n    cast(null as TEXT) as \n    \n    statement_descriptor\n    \n , \n    cast(null as TEXT) as \n    \n    status\n    \n , \n    cast(null as timestamp) as \n    \n    status_transitions_finalized_at\n    \n , \n    cast(null as timestamp) as \n    \n    status_transitions_marked_uncollectible_at\n    \n , \n    cast(null as timestamp) as \n    \n    status_transitions_paid_at\n    \n , \n    cast(null as timestamp) as \n    \n    status_transitions_voided_at\n    \n , \n    cast(null as integer) as \n    \n    subscription_proration_date\n    \n , \n    cast(null as integer) as \n    \n    subtotal\n    \n , \n    cast(null as integer) as \n    \n    tax\n    \n , \n    cast(null as numeric(28,6)) as \n    \n    tax_percent\n    \n , \n    cast(null as integer) as \n    \n    threshold_reason_amount_gte\n    \n , \n    cast(null as integer) as \n    \n    total\n    \n , \n    cast(null as timestamp) as \n    \n    webhooks_delivered_at\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as invoice_id,\n        default_payment_method_id,\n        payment_intent_id,\n        subscription_id,\n        amount_due,\n        amount_paid,\n        amount_remaining,\n        post_payment_credit_notes_amount,\n        pre_payment_credit_notes_amount,\n        attempt_count,\n        auto_advance,\n        billing_reason,\n        charge_id,\n        cast(created as timestamp) as created_at,\n        currency,\n        customer_id,\n        description,\n        due_date,\n        metadata,\n        number,\n        paid as is_paid,\n        receipt_number,\n        status,\n        subtotal,\n        tax,\n        tax_percent,\n        total,\n        period_start,\n        period_end,\n        cast(status_transitions_finalized_at as timestamp) as status_transitions_finalized_at,\n        cast(status_transitions_marked_uncollectible_at as timestamp) as status_transitions_marked_uncollectible_at,\n        cast(status_transitions_paid_at as timestamp) as status_transitions_paid_at,\n        cast(status_transitions_voided_at as timestamp) as status_transitions_voided_at,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n    and not coalesce(is_deleted, false)\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:00.577495Z", "completed_at": "2024-08-06T04:06:00.836306Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:00.836548Z", "completed_at": "2024-08-06T04:06:00.836554Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.2913200855255127, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__invoice_line_item", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice_line_item_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    discountable\n    \n as \n    \n    discountable\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    invoice_id\n    \n as \n    \n    invoice_id\n    \n, \n    cast(null as TEXT) as \n    \n    invoice_item_id\n    \n , \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    period_end\n    \n as \n    \n    period_end\n    \n, \n    \n    \n    period_start\n    \n as \n    \n    period_start\n    \n, \n    \n    \n    plan_id\n    \n as \n    \n    plan_id\n    \n, \n    cast(null as TEXT) as \n    \n    price_id\n    \n , \n    \n    \n    proration\n    \n as \n    \n    proration\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    subscription_id\n    \n as \n    \n    subscription_id\n    \n, \n    \n    \n    subscription_item_id\n    \n as \n    \n    subscription_item_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    unique_id\n    \n as \n    \n    unique_id\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as invoice_line_item_id,\n        invoice_id,\n        invoice_item_id,\n        amount,\n        currency,\n        description,\n        discountable as is_discountable,\n        plan_id,\n        price_id,\n        proration,\n        quantity,\n        subscription_id,\n        subscription_item_id,\n        type,\n        unique_id as unique_invoice_line_item_id,\n        period_start,\n        period_end,\n        source_relation\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n\n    \n    and id not like 'sub%' -- ids starting with 'sub' are temporary and are replaced by permanent ids starting with 'sli' \n    \n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice_line_item\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:00.610025Z", "completed_at": "2024-08-06T04:06:00.885663Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:00.886211Z", "completed_at": "2024-08-06T04:06:00.886219Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.30133891105651855, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_method_card", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method_card_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    brand\n    \n as \n    \n    brand\n    \n, \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    \n    \n    funding\n    \n as \n    \n    funding\n    \n, \n    \n    \n    payment_method_id\n    \n as \n    \n    payment_method_id\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    wallet_type\n    \n as \n    \n    wallet_type\n    \n, \n    cast(null as TEXT) as \n    \n    three_d_secure_authentication_flow\n    \n , \n    cast(null as TEXT) as \n    \n    three_d_secure_result\n    \n , \n    cast(null as TEXT) as \n    \n    three_d_secure_result_reason\n    \n , \n    cast(null as TEXT) as \n    \n    three_d_secure_version\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        payment_method_id,\n        brand,\n        funding,\n        charge_id,\n        type,\n        wallet_type,\n        three_d_secure_authentication_flow,\n        three_d_secure_result,\n        three_d_secure_result_reason,\n        three_d_secure_version,\n        source_relation\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method_card\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:00.603851Z", "completed_at": "2024-08-06T04:06:00.886523Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:00.886769Z", "completed_at": "2024-08-06T04:06:00.886772Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.3144350051879883, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_intent", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_intent_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amount_capturable\n    \n as \n    \n    amount_capturable\n    \n, \n    \n    \n    amount_received\n    \n as \n    \n    amount_received\n    \n, \n    \n    \n    application\n    \n as \n    \n    application\n    \n, \n    \n    \n    application_fee_amount\n    \n as \n    \n    application_fee_amount\n    \n, \n    \n    \n    canceled_at\n    \n as \n    \n    canceled_at\n    \n, \n    \n    \n    cancellation_reason\n    \n as \n    \n    cancellation_reason\n    \n, \n    \n    \n    capture_method\n    \n as \n    \n    capture_method\n    \n, \n    \n    \n    confirmation_method\n    \n as \n    \n    confirmation_method\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    last_payment_error_charge_id\n    \n as \n    \n    last_payment_error_charge_id\n    \n, \n    \n    \n    last_payment_error_code\n    \n as \n    \n    last_payment_error_code\n    \n, \n    \n    \n    last_payment_error_decline_code\n    \n as \n    \n    last_payment_error_decline_code\n    \n, \n    \n    \n    last_payment_error_doc_url\n    \n as \n    \n    last_payment_error_doc_url\n    \n, \n    \n    \n    last_payment_error_message\n    \n as \n    \n    last_payment_error_message\n    \n, \n    \n    \n    last_payment_error_param\n    \n as \n    \n    last_payment_error_param\n    \n, \n    \n    \n    last_payment_error_source_id\n    \n as \n    \n    last_payment_error_source_id\n    \n, \n    \n    \n    last_payment_error_type\n    \n as \n    \n    last_payment_error_type\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    cast(null as TEXT) as \n    \n    metadata\n    \n , \n    \n    \n    on_behalf_of\n    \n as \n    \n    on_behalf_of\n    \n, \n    \n    \n    payment_method_id\n    \n as \n    \n    payment_method_id\n    \n, \n    \n    \n    receipt_email\n    \n as \n    \n    receipt_email\n    \n, \n    \n    \n    source_id\n    \n as \n    \n    source_id\n    \n, \n    \n    \n    statement_descriptor\n    \n as \n    \n    statement_descriptor\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    transfer_data_destination\n    \n as \n    \n    transfer_data_destination\n    \n, \n    \n    \n    transfer_group\n    \n as \n    \n    transfer_group\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as payment_intent_id,\n        amount,\n        amount_capturable,\n        amount_received,\n        application,\n        application_fee_amount,\n        cast(canceled_at as timestamp) as canceled_at,\n        cancellation_reason,\n        capture_method,\n        confirmation_method,\n        cast(created as timestamp) as created_at,\n        currency,\n        customer_id,\n        description,\n        metadata,\n        payment_method_id,\n        receipt_email,\n        statement_descriptor,\n        status,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_intent\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:00.846087Z", "completed_at": "2024-08-06T04:06:01.095998Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.096217Z", "completed_at": "2024-08-06T04:06:01.096223Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.2752349376678467, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payment_method", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    billing_detail_address_city\n    \n as \n    \n    billing_detail_address_city\n    \n, \n    \n    \n    billing_detail_address_country\n    \n as \n    \n    billing_detail_address_country\n    \n, \n    \n    \n    billing_detail_address_line_1\n    \n as \n    \n    billing_detail_address_line_1\n    \n, \n    \n    \n    billing_detail_address_line_2\n    \n as \n    \n    billing_detail_address_line_2\n    \n, \n    \n    \n    billing_detail_address_postal_code\n    \n as \n    \n    billing_detail_address_postal_code\n    \n, \n    \n    \n    billing_detail_address_state\n    \n as \n    \n    billing_detail_address_state\n    \n, \n    \n    \n    billing_detail_email\n    \n as \n    \n    billing_detail_email\n    \n, \n    \n    \n    billing_detail_name\n    \n as \n    \n    billing_detail_name\n    \n, \n    \n    \n    billing_detail_phone\n    \n as \n    \n    billing_detail_phone\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    cast(null as TEXT) as \n    \n    metadata\n    \n , \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as payment_method_id,\n        cast(created as timestamp) as created_at,\n        customer_id,\n        metadata,\n        type,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:00.875027Z", "completed_at": "2024-08-06T04:06:01.152229Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.152489Z", "completed_at": "2024-08-06T04:06:01.152496Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.30604004859924316, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__payout", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payout_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    arrival_date\n    \n as \n    \n    arrival_date\n    \n, \n    \n    \n    automatic\n    \n as \n    \n    automatic\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    connected_account_id\n    \n as \n    \n    connected_account_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    destination_bank_account_id\n    \n as \n    \n    destination_bank_account_id\n    \n, \n    \n    \n    destination_card_id\n    \n as \n    \n    destination_card_id\n    \n, \n    \n    \n    failure_balance_transaction_id\n    \n as \n    \n    failure_balance_transaction_id\n    \n, \n    \n    \n    failure_code\n    \n as \n    \n    failure_code\n    \n, \n    \n    \n    failure_message\n    \n as \n    \n    failure_message\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    method\n    \n as \n    \n    method\n    \n, \n    \n    \n    source_type\n    \n as \n    \n    source_type\n    \n, \n    \n    \n    statement_descriptor\n    \n as \n    \n    statement_descriptor\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as payout_id,\n        amount,\n        cast(arrival_date as timestamp) as arrival_date_at,\n        automatic as is_automatic,\n        balance_transaction_id,\n        cast(created as timestamp) as created_at,\n        currency,\n        description,\n        destination_bank_account_id,\n        destination_card_id,\n        metadata,\n        method,\n        source_type,\n        status,\n        type,\n        source_relation\n\n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payout\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:00.912020Z", "completed_at": "2024-08-06T04:06:01.242176Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.242417Z", "completed_at": "2024-08-06T04:06:01.242425Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.3572201728820801, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__price_plan", "compiled": true, "compiled_code": "\n\nwith price_plan as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__price_plan_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    active\n    \n as is_active , \n    \n    \n    billing_scheme\n    \n as \n    \n    billing_scheme\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    nickname\n    \n as \n    \n    nickname\n    \n, \n    \n    \n    product_id\n    \n as \n    \n    product_id\n    \n, \n    \n    \n    recurring_aggregate_usage\n    \n as \n    \n    recurring_aggregate_usage\n    \n, \n    \n    \n    recurring_interval\n    \n as \n    \n    recurring_interval\n    \n, \n    \n    \n    recurring_interval_count\n    \n as \n    \n    recurring_interval_count\n    \n, \n    \n    \n    recurring_usage_type\n    \n as \n    \n    recurring_usage_type\n    \n, \n    \n    \n    unit_amount\n    \n as \n    \n    unit_amount\n    \n, \n    \n    \n    unit_amount_decimal\n    \n as \n    \n    unit_amount_decimal\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from price_plan\n),\n\nfinal as (\n\n    select \n        id as price_plan_id,\n        is_active,\n        unit_amount,\n        currency,\n        recurring_interval,\n        recurring_interval_count,\n        recurring_usage_type,\n        recurring_aggregate_usage,\n        metadata,\n        nickname,\n        product_id,\n        billing_scheme,\n        cast(created as timestamp) as created_at,\n        is_deleted,\n        source_relation\n\n        \n        \n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__price_plan\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:00.918832Z", "completed_at": "2024-08-06T04:06:01.242747Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.242989Z", "completed_at": "2024-08-06T04:06:01.242993Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.355802059173584, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__product", "compiled": true, "compiled_code": "\n\nwith product as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__product_tmp\"\n),\n\nfields as (\n\n    select\n        \n    cast(null as timestamp) as \n    \n    fivetran_synced\n    \n , \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    active\n    \n as is_active , \n    cast(null as TEXT) as \n    \n    attributes\n    \n , \n    \n    \n    caption\n    \n as \n    \n    caption\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    cast(null as timestamp) as \n    \n    deactivate_on\n    \n , \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    cast(null as TEXT) as \n    \n    images\n    \n , \n    \n    \n    is_deleted\n    \n as \n    \n    is_deleted\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    shippable\n    \n as \n    \n    shippable\n    \n, \n    \n    \n    statement_descriptor\n    \n as \n    \n    statement_descriptor\n    \n, \n    \n    \n    type\n    \n as \n    \n    type\n    \n, \n    \n    \n    unit_label\n    \n as \n    \n    unit_label\n    \n, \n    \n    \n    updated\n    \n as \n    \n    updated\n    \n, \n    \n    \n    url\n    \n as \n    \n    url\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from product\n),\n\nfinal as (\n\n    select \n        id as product_id,\n        is_active, -- renamed in macro get_product_columns, source column name: active\n        attributes,\n        caption,\n        cast(created as timestamp) as created_at,\n        cast(deactivate_on as timestamp) as deactivate_at,\n        description,\n        images,\n        is_deleted,\n        name,\n        shippable,\n        statement_descriptor,\n        type,\n        unit_label,\n        updated,\n        url,\n        source_relation\n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__product\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.275772Z", "completed_at": "2024-08-06T04:06:01.284005Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.284263Z", "completed_at": "2024-08-06T04:06:01.284269Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.009171247482299805, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__charge_charge_id__source_relation.4616b292a1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        charge_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__charge\"\n    group by charge_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.285262Z", "completed_at": "2024-08-06T04:06:01.289979Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.290211Z", "completed_at": "2024-08-06T04:06:01.290216Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0054149627685546875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__charge_charge_id.8941bc704a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect charge_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__charge\"\nwhere charge_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.291241Z", "completed_at": "2024-08-06T04:06:01.294176Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.294389Z", "completed_at": "2024-08-06T04:06:01.294393Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.003609180450439453, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__account_account_id__source_relation.822bb93896", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        account_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__account\"\n    group by account_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.295421Z", "completed_at": "2024-08-06T04:06:01.298027Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.298244Z", "completed_at": "2024-08-06T04:06:01.298249Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.003323078155517578, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__account_account_id.374858379a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__account\"\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.299276Z", "completed_at": "2024-08-06T04:06:01.302228Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.302444Z", "completed_at": "2024-08-06T04:06:01.302450Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.003673076629638672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__balance_transaction_balance_transaction_id__source_relation.e83fa67eba", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        balance_transaction_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__balance_transaction\"\n    group by balance_transaction_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.303451Z", "completed_at": "2024-08-06T04:06:01.306782Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.306988Z", "completed_at": "2024-08-06T04:06:01.306993Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00400090217590332, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__balance_transaction_balance_transaction_id.0ac20e778f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect balance_transaction_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__balance_transaction\"\nwhere balance_transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.307977Z", "completed_at": "2024-08-06T04:06:01.310803Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.311020Z", "completed_at": "2024-08-06T04:06:01.311025Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0035049915313720703, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__card_card_id__source_relation.6e04594797", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        card_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__card\"\n    group by card_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.312006Z", "completed_at": "2024-08-06T04:06:01.314952Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.315163Z", "completed_at": "2024-08-06T04:06:01.315169Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0036318302154541016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__card_card_id.edadd3106a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect card_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__card\"\nwhere card_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.316433Z", "completed_at": "2024-08-06T04:06:01.319776Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.320011Z", "completed_at": "2024-08-06T04:06:01.320017Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00426793098449707, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__fee_balance_transaction_id__index__source_relation.d2b1cfff07", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        balance_transaction_id, index, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__fee\"\n    group by balance_transaction_id, index, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.321086Z", "completed_at": "2024-08-06T04:06:01.323762Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.323990Z", "completed_at": "2024-08-06T04:06:01.323994Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0033948421478271484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__fee_balance_transaction_id.725d4ac005", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect balance_transaction_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__fee\"\nwhere balance_transaction_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.325209Z", "completed_at": "2024-08-06T04:06:01.329362Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.329592Z", "completed_at": "2024-08-06T04:06:01.329597Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.005038022994995117, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__dispute_dispute_id__source_relation.3fe3205476", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        dispute_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__dispute\"\n    group by dispute_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.330665Z", "completed_at": "2024-08-06T04:06:01.333550Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.333754Z", "completed_at": "2024-08-06T04:06:01.333758Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0035772323608398438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__customer_customer_id__source_relation.3fa0f43271", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        customer_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__customer\"\n    group by customer_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.334762Z", "completed_at": "2024-08-06T04:06:01.337417Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.337618Z", "completed_at": "2024-08-06T04:06:01.337624Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0033600330352783203, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__customer_customer_id.2e70421da0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect customer_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__customer\"\nwhere customer_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.338702Z", "completed_at": "2024-08-06T04:06:01.342700Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.342923Z", "completed_at": "2024-08-06T04:06:01.342928Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0047681331634521484, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__discount_discount_id__type__type_id__source_relation.d9b54c55ae", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        discount_id, type, type_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__discount\"\n    group by discount_id, type, type_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.343946Z", "completed_at": "2024-08-06T04:06:01.346991Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.347200Z", "completed_at": "2024-08-06T04:06:01.347205Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.003735065460205078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__invoice_invoice_id__source_relation.f632654e72", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        invoice_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice\"\n    group by invoice_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.348287Z", "completed_at": "2024-08-06T04:06:01.351658Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.351850Z", "completed_at": "2024-08-06T04:06:01.351855Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.004122257232666016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__invoice_invoice_id.34cc0ff095", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect invoice_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice\"\nwhere invoice_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.352820Z", "completed_at": "2024-08-06T04:06:01.355649Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.355872Z", "completed_at": "2024-08-06T04:06:01.355878Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0035152435302734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__invoice_line_item_invoice_line_item_id__invoice_id__source_relation.d2ff4b8aed", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        invoice_line_item_id, invoice_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice_line_item\"\n    group by invoice_line_item_id, invoice_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.356889Z", "completed_at": "2024-08-06T04:06:01.359518Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.359724Z", "completed_at": "2024-08-06T04:06:01.359729Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0032961368560791016, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__invoice_line_item_invoice_line_item_id.5b9c83b5f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect invoice_line_item_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__invoice_line_item\"\nwhere invoice_line_item_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.360745Z", "completed_at": "2024-08-06T04:06:01.363447Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.363657Z", "completed_at": "2024-08-06T04:06:01.363661Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.003381013870239258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__payment_method_card_payment_method_id__source_relation.fe1f48acd0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        payment_method_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method_card\"\n    group by payment_method_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.364760Z", "completed_at": "2024-08-06T04:06:01.367397Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.367613Z", "completed_at": "2024-08-06T04:06:01.367618Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0034220218658447266, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__payment_method_card_payment_method_id.f246b11438", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payment_method_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method_card\"\nwhere payment_method_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.368721Z", "completed_at": "2024-08-06T04:06:01.372513Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.372734Z", "completed_at": "2024-08-06T04:06:01.372740Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.004556179046630859, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__payment_intent_payment_intent_id__source_relation.046730da02", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        payment_intent_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_intent\"\n    group by payment_intent_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.373768Z", "completed_at": "2024-08-06T04:06:01.376451Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.376662Z", "completed_at": "2024-08-06T04:06:01.376667Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.003368854522705078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__payment_intent_payment_intent_id.cb5b4d09eb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payment_intent_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_intent\"\nwhere payment_intent_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.377663Z", "completed_at": "2024-08-06T04:06:01.380254Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.380469Z", "completed_at": "2024-08-06T04:06:01.380474Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.0032787322998046875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__payment_method_payment_method_id__source_relation.02a8143517", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        payment_method_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method\"\n    group by payment_method_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.381463Z", "completed_at": "2024-08-06T04:06:01.384039Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.384239Z", "completed_at": "2024-08-06T04:06:01.384243Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00323486328125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__payment_method_payment_method_id.0a8907c471", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payment_method_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payment_method\"\nwhere payment_method_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.385218Z", "completed_at": "2024-08-06T04:06:01.395493Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.395744Z", "completed_at": "2024-08-06T04:06:01.395751Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.011001110076904297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__payout_payout_id__source_relation.f9897a29ec", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        payout_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payout\"\n    group by payout_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.397252Z", "completed_at": "2024-08-06T04:06:01.399990Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.400203Z", "completed_at": "2024-08-06T04:06:01.400208Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.00345611572265625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__payout_payout_id.6864a8acfc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect payout_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__payout\"\nwhere payout_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.401224Z", "completed_at": "2024-08-06T04:06:01.404099Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.404320Z", "completed_at": "2024-08-06T04:06:01.404325Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.003582000732421875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__price_plan_price_plan_id__source_relation.3d189cd99d", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        price_plan_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__price_plan\"\n    group by price_plan_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.405318Z", "completed_at": "2024-08-06T04:06:01.408179Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.408388Z", "completed_at": "2024-08-06T04:06:01.408393Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.003532886505126953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__product_product_id__source_relation.cfe44d459e", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        product_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__product\"\n    group by product_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.121994Z", "completed_at": "2024-08-06T04:06:01.396120Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.396593Z", "completed_at": "2024-08-06T04:06:01.396596Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.3000640869140625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__refund", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__refund_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    charge_id\n    \n as \n    \n    charge_id\n    \n, \n    cast(null as TEXT) as \n    \n    payment_intent_id\n    \n , \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    failure_balance_transaction_id\n    \n as \n    \n    failure_balance_transaction_id\n    \n, \n    \n    \n    failure_reason\n    \n as \n    \n    failure_reason\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    reason\n    \n as \n    \n    reason\n    \n, \n    \n    \n    receipt_number\n    \n as \n    \n    receipt_number\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as refund_id,\n        payment_intent_id,\n        balance_transaction_id,\n        charge_id,\n        amount,\n        cast(created as timestamp) as created_at,\n        currency,\n        description,\n        metadata,\n        reason,\n        receipt_number,\n        status,\n        source_relation\n\n        \n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__refund\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.422770Z", "completed_at": "2024-08-06T04:06:01.429945Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.430170Z", "completed_at": "2024-08-06T04:06:01.430176Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007904052734375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__refund_refund_id__source_relation.93aa6111ec", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        refund_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__refund\"\n    group by refund_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.426497Z", "completed_at": "2024-08-06T04:06:01.430561Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.430755Z", "completed_at": "2024-08-06T04:06:01.430758Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004729032516479492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__refund_refund_id.7c6dcedec0", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect refund_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__refund\"\nwhere refund_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.181610Z", "completed_at": "2024-08-06T04:06:01.508094Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.508319Z", "completed_at": "2024-08-06T04:06:01.508325Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.3537309169769287, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__subscription", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__subscription_tmp\"\n\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    _fivetran_active\n    \n as \n    \n    _fivetran_active\n    \n, \n    \n    \n    application_fee_percent\n    \n as \n    \n    application_fee_percent\n    \n, \n    \n    \n    billing\n    \n as \n    \n    billing\n    \n, \n    \n    \n    billing_cycle_anchor\n    \n as \n    \n    billing_cycle_anchor\n    \n, \n    \n    \n    billing_threshold_amount_gte\n    \n as \n    \n    billing_threshold_amount_gte\n    \n, \n    \n    \n    billing_threshold_reset_billing_cycle_anchor\n    \n as \n    \n    billing_threshold_reset_billing_cycle_anchor\n    \n, \n    \n    \n    cancel_at\n    \n as \n    \n    cancel_at\n    \n, \n    \n    \n    cancel_at_period_end\n    \n as \n    \n    cancel_at_period_end\n    \n, \n    \n    \n    canceled_at\n    \n as \n    \n    canceled_at\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    current_period_end\n    \n as \n    \n    current_period_end\n    \n, \n    \n    \n    current_period_start\n    \n as \n    \n    current_period_start\n    \n, \n    \n    \n    customer_id\n    \n as \n    \n    customer_id\n    \n, \n    \n    \n    days_until_due\n    \n as \n    \n    days_until_due\n    \n, \n    \n    \n    default_source_id\n    \n as \n    \n    default_source_id\n    \n, \n    \n    \n    ended_at\n    \n as \n    \n    ended_at\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    cast(null as TEXT) as \n    \n    latest_invoice_id\n    \n , \n    cast(null as TEXT) as \n    \n    default_payment_method_id\n    \n , \n    cast(null as TEXT) as \n    \n    pending_setup_intent_id\n    \n , \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    quantity\n    \n as \n    \n    quantity\n    \n, \n    \n    \n    start_date\n    \n as \n    \n    start_date\n    \n, \n    \n    \n    status\n    \n as \n    \n    status\n    \n, \n    \n    \n    tax_percent\n    \n as \n    \n    tax_percent\n    \n, \n    \n    \n    trial_end\n    \n as \n    \n    trial_end\n    \n, \n    \n    \n    trial_start\n    \n as \n    \n    trial_start\n    \n, \n    cast(null as TEXT) as \n    \n    pause_collection_behavior\n    \n , \n    cast(null as timestamp) as \n    \n    pause_collection_resumes_at\n    \n \n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n        \n    from base\n),\n\nfinal as (\n    \n    select \n        id as subscription_id,\n        latest_invoice_id,\n        customer_id,\n        default_payment_method_id,\n        pending_setup_intent_id,\n        status,\n        billing,\n        billing_cycle_anchor,\n        cast(cancel_at as timestamp) as cancel_at,\n        cancel_at_period_end as is_cancel_at_period_end,\n        cast(canceled_at as timestamp) as canceled_at,\n        cast(created as timestamp) as created_at,\n        current_period_start,\n        current_period_end,\n        days_until_due,\n        metadata,\n        cast(start_date as timestamp) as start_date_at,\n        cast(ended_at as timestamp) as ended_at,\n        pause_collection_behavior,\n        cast(pause_collection_resumes_at as timestamp) as pause_collection_resumes_at,\n        source_relation\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n    \n        and coalesce(_fivetran_active, true)\n    \n)\n\nselect * \nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__subscription\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.536734Z", "completed_at": "2024-08-06T04:06:01.542675Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.542913Z", "completed_at": "2024-08-06T04:06:01.542920Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.007194995880126953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__subscription_subscription_id__source_relation.1b87d4205c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        subscription_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__subscription\"\n    group by subscription_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.539626Z", "completed_at": "2024-08-06T04:06:01.543298Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.543550Z", "completed_at": "2024-08-06T04:06:01.543554Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.00755000114440918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.not_null_stg_stripe__subscription_subscription_id.b242b1f7bc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect subscription_id\nfrom \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__subscription\"\nwhere subscription_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.269808Z", "completed_at": "2024-08-06T04:06:01.529623Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.529846Z", "completed_at": "2024-08-06T04:06:01.529852Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.28392982482910156, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.stripe_source.stg_stripe__transfer", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__transfer_tmp\"\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    amount\n    \n as \n    \n    amount\n    \n, \n    \n    \n    amount_reversed\n    \n as \n    \n    amount_reversed\n    \n, \n    \n    \n    balance_transaction_id\n    \n as \n    \n    balance_transaction_id\n    \n, \n    \n    \n    created\n    \n as \n    \n    created\n    \n, \n    \n    \n    currency\n    \n as \n    \n    currency\n    \n, \n    \n    \n    description\n    \n as \n    \n    description\n    \n, \n    \n    \n    destination\n    \n as \n    \n    destination\n    \n, \n    \n    \n    destination_payment\n    \n as \n    \n    destination_payment\n    \n, \n    \n    \n    destination_payment_id\n    \n as \n    \n    destination_payment_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    livemode\n    \n as \n    \n    livemode\n    \n, \n    \n    \n    metadata\n    \n as \n    \n    metadata\n    \n, \n    \n    \n    reversed\n    \n as \n    \n    reversed\n    \n, \n    \n    \n    source_transaction\n    \n as \n    \n    source_transaction\n    \n, \n    \n    \n    source_transaction_id\n    \n as \n    \n    source_transaction_id\n    \n, \n    \n    \n    source_type\n    \n as \n    \n    source_type\n    \n, \n    \n    \n    transfer_group\n    \n as \n    \n    transfer_group\n    \n\n\n\n\n        \n\n\n, cast('' as TEXT) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select\n        id as transfer_id,\n        amount as transfer_amount,\n        amount_reversed as transfer_amount_reversed,\n        balance_transaction_id,\n        cast(created as timestamp) as transfer_created_at,\n        currency as transfer_currency,\n        description as transfer_description,\n        destination as transfer_destination,\n        destination_payment,\n        destination_payment_id,\n        metadata as transfer_metadata,\n        reversed as transfer_is_reversed,\n        source_transaction,\n        source_transaction_id,\n        source_type,\n        transfer_group,\n        source_relation\n        \n        \n\n    from fields\n    \n\n    where cast(livemode as boolean ) = True\n\n\n)\n\nselect *\nfrom final", "relation_name": "\"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__transfer\""}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-08-06T04:06:01.554450Z", "completed_at": "2024-08-06T04:06:01.557542Z"}, {"name": "execute", "started_at": "2024-08-06T04:06:01.557761Z", "completed_at": "2024-08-06T04:06:01.557767Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.003777027130126953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.stripe_source.dbt_utils_unique_combination_of_columns_stg_stripe__transfer_transfer_id__source_relation.ade160ba67", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        transfer_id, source_relation\n    from \"postgres\".\"stripe_source_integrations_tests_5_stg_stripe\".\"stg_stripe__transfer\"\n    group by transfer_id, source_relation\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}], "elapsed_time": 3.2198829650878906, "args": {"cache_selected_only": false, "populate_cache": true, "vars": {}, "log_level_file": "debug", "require_explicit_package_overrides_for_builtin_materializations": true, "introspect": true, "quiet": false, "exclude": [], "select": [], "show_resource_report": false, "static_parser": true, "profiles_dir": "/Users/joseph.markiewicz/.dbt", "log_format": "default", "compile": true, "log_file_max_bytes": 10485760, "send_anonymous_usage_stats": true, "warn_error_options": {"include": [], "exclude": []}, "log_level": "info", "partial_parse": true, "log_path": "/Users/joseph.markiewicz/Documents/dbt_packages/standardized_models/billing/dbt_stripe_source/integration_tests/logs", "version_check": true, "source_freshness_run_project_hooks": false, "favor_state": false, "macro_debugging": false, "defer": false, "static": false, "write_json": true, "invocation_command": "dbt docs generate -t postgres", "use_colors_file": true, "project_dir": "/Users/joseph.markiewicz/Documents/dbt_packages/standardized_models/billing/dbt_stripe_source/integration_tests", "target": "postgres", "printer_width": 80, "strict_mode": false, "log_format_file": "debug", "use_colors": true, "which": "generate", "enable_legacy_logger": false, "indirect_selection": "eager", "partial_parse_file_diff": true, "print": true, "require_resource_names_without_spaces": false, "empty_catalog": false}}